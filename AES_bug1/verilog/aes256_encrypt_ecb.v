// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes256_encrypt_ecb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        k_address0,
        k_ce0,
        k_q0,
        buf_r_address0,
        buf_r_ce0,
        buf_r_we0,
        buf_r_d0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf_r_q1,
        buf_offset2
);

parameter    ap_ST_fsm_state1 = 58'd1;
parameter    ap_ST_fsm_pp0_stage0 = 58'd2;
parameter    ap_ST_fsm_state4 = 58'd4;
parameter    ap_ST_fsm_state5 = 58'd8;
parameter    ap_ST_fsm_state6 = 58'd16;
parameter    ap_ST_fsm_pp1_stage0 = 58'd32;
parameter    ap_ST_fsm_pp1_stage1 = 58'd64;
parameter    ap_ST_fsm_state10 = 58'd128;
parameter    ap_ST_fsm_state11 = 58'd256;
parameter    ap_ST_fsm_pp2_stage0 = 58'd512;
parameter    ap_ST_fsm_pp2_stage1 = 58'd1024;
parameter    ap_ST_fsm_pp2_stage2 = 58'd2048;
parameter    ap_ST_fsm_state16 = 58'd4096;
parameter    ap_ST_fsm_state17 = 58'd8192;
parameter    ap_ST_fsm_state18 = 58'd16384;
parameter    ap_ST_fsm_state19 = 58'd32768;
parameter    ap_ST_fsm_state20 = 58'd65536;
parameter    ap_ST_fsm_state21 = 58'd131072;
parameter    ap_ST_fsm_state22 = 58'd262144;
parameter    ap_ST_fsm_state23 = 58'd524288;
parameter    ap_ST_fsm_state24 = 58'd1048576;
parameter    ap_ST_fsm_state25 = 58'd2097152;
parameter    ap_ST_fsm_state26 = 58'd4194304;
parameter    ap_ST_fsm_state27 = 58'd8388608;
parameter    ap_ST_fsm_state28 = 58'd16777216;
parameter    ap_ST_fsm_state29 = 58'd33554432;
parameter    ap_ST_fsm_state30 = 58'd67108864;
parameter    ap_ST_fsm_state31 = 58'd134217728;
parameter    ap_ST_fsm_state32 = 58'd268435456;
parameter    ap_ST_fsm_state33 = 58'd536870912;
parameter    ap_ST_fsm_state34 = 58'd1073741824;
parameter    ap_ST_fsm_state35 = 58'd2147483648;
parameter    ap_ST_fsm_state36 = 58'd4294967296;
parameter    ap_ST_fsm_state37 = 58'd8589934592;
parameter    ap_ST_fsm_state38 = 58'd17179869184;
parameter    ap_ST_fsm_state39 = 58'd34359738368;
parameter    ap_ST_fsm_state40 = 58'd68719476736;
parameter    ap_ST_fsm_state41 = 58'd137438953472;
parameter    ap_ST_fsm_state42 = 58'd274877906944;
parameter    ap_ST_fsm_state43 = 58'd549755813888;
parameter    ap_ST_fsm_state44 = 58'd1099511627776;
parameter    ap_ST_fsm_pp3_stage0 = 58'd2199023255552;
parameter    ap_ST_fsm_pp3_stage1 = 58'd4398046511104;
parameter    ap_ST_fsm_pp3_stage2 = 58'd8796093022208;
parameter    ap_ST_fsm_state49 = 58'd17592186044416;
parameter    ap_ST_fsm_state50 = 58'd35184372088832;
parameter    ap_ST_fsm_state51 = 58'd70368744177664;
parameter    ap_ST_fsm_state52 = 58'd140737488355328;
parameter    ap_ST_fsm_state53 = 58'd281474976710656;
parameter    ap_ST_fsm_state54 = 58'd562949953421312;
parameter    ap_ST_fsm_state55 = 58'd1125899906842624;
parameter    ap_ST_fsm_state56 = 58'd2251799813685248;
parameter    ap_ST_fsm_state57 = 58'd4503599627370496;
parameter    ap_ST_fsm_state58 = 58'd9007199254740992;
parameter    ap_ST_fsm_state59 = 58'd18014398509481984;
parameter    ap_ST_fsm_state60 = 58'd36028797018963968;
parameter    ap_ST_fsm_state61 = 58'd72057594037927936;
parameter    ap_ST_fsm_state62 = 58'd144115188075855872;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] k_address0;
output   k_ce0;
input  [7:0] k_q0;
output  [10:0] buf_r_address0;
output   buf_r_ce0;
output   buf_r_we0;
output  [7:0] buf_r_d0;
input  [7:0] buf_r_q0;
output  [10:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [7:0] buf_r_d1;
input  [7:0] buf_r_q1;
input  [11:0] buf_offset2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg k_ce0;
reg[10:0] buf_r_address0;
reg buf_r_ce0;
reg buf_r_we0;
reg[7:0] buf_r_d0;
reg[10:0] buf_r_address1;
reg buf_r_ce1;
reg buf_r_we1;
reg[7:0] buf_r_d1;

(* fsm_encoding = "none" *) reg   [57:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] sbox_address0;
reg    sbox_ce0;
wire   [7:0] sbox_q0;
wire   [7:0] sbox_q1;
wire   [7:0] sbox_q2;
reg   [5:0] i_reg_384;
reg   [4:0] i_i_reg_418;
reg   [4:0] i_i1_reg_441;
reg   [4:0] i_i2_reg_463;
reg   [7:0] reg_498;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state50;
reg   [7:0] reg_504;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state55;
reg   [7:0] reg_511;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state51;
reg   [7:0] reg_518;
reg   [7:0] reg_523;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state52;
reg   [7:0] reg_528;
reg   [7:0] reg_533;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state53;
reg   [7:0] reg_538;
reg   [7:0] reg_543;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state54;
reg   [7:0] reg_548;
reg   [7:0] reg_553;
wire    ap_CS_fsm_state28;
wire   [0:0] tmp_86_fu_811_p3;
reg   [0:0] tmp_85_reg_1311;
wire    ap_CS_fsm_state59;
wire   [0:0] tmp_fu_558_p2;
reg   [0:0] tmp_reg_1164;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [5:0] i_5_fu_564_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_s_fu_570_p1;
reg   [63:0] tmp_s_reg_1173;
wire   [0:0] tmp_81_fu_575_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] phitmp_fu_581_p2;
reg   [2:0] phitmp_reg_1188;
wire   [7:0] grp_aes_expandEncKey_fu_474_ap_return;
wire    ap_CS_fsm_state6;
wire    grp_aes_expandEncKey_fu_474_ap_done;
wire   [0:0] tmp_i_fu_587_p2;
reg   [0:0] tmp_i_reg_1198;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state7_pp1_stage0_iter0;
wire    ap_block_state9_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [4:0] i_6_fu_593_p2;
reg   [4:0] i_6_reg_1202;
reg    ap_enable_reg_pp1_iter0;
wire   [63:0] tmp_120_i_fu_605_p1;
reg   [63:0] tmp_120_i_reg_1208;
wire   [63:0] tmp_i_20_fu_613_p1;
reg   [63:0] tmp_i_20_reg_1218;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state8_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
reg   [10:0] buf_addr_12_reg_1228;
reg   [10:0] buf_addr_reg_1240;
wire    ap_CS_fsm_state10;
reg   [10:0] buf_addr_1_reg_1246;
reg   [10:0] buf_addr_2_reg_1252;
reg   [10:0] buf_addr_3_reg_1257;
reg   [10:0] buf_addr_4_reg_1262;
reg   [10:0] buf_addr_5_reg_1267;
reg   [10:0] buf_addr_6_reg_1272;
reg   [10:0] buf_addr_7_reg_1277;
reg   [10:0] buf_addr_8_reg_1282;
reg   [10:0] buf_addr_9_reg_1287;
reg   [10:0] buf_addr_10_reg_1292;
reg   [10:0] buf_addr_11_reg_1297;
wire   [10:0] tmp_84_fu_759_p1;
reg   [10:0] tmp_84_reg_1302;
wire   [0:0] exitcond_fu_767_p2;
wire    ap_CS_fsm_state11;
wire   [0:0] tmp_85_fu_773_p1;
wire   [0:0] tmp_i2_fu_777_p2;
reg   [0:0] tmp_i2_reg_1315;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state12_pp2_stage0_iter0;
wire    ap_block_state15_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [4:0] i_8_fu_783_p2;
reg   [4:0] i_8_reg_1319;
reg    ap_enable_reg_pp2_iter0;
reg   [10:0] buf_addr_14_reg_1325;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state13_pp2_stage1_iter0;
wire    ap_block_pp2_stage1_11001;
wire    ap_CS_fsm_pp2_stage2;
wire    ap_block_state14_pp2_stage2_iter0;
wire    ap_block_pp2_stage2_11001;
reg   [10:0] buf_addr_15_reg_1338;
wire   [3:0] tmp_87_fu_833_p1;
reg   [3:0] tmp_87_reg_1343;
reg   [10:0] buf_addr_16_reg_1349;
wire   [4:0] i_14_fu_857_p2;
reg   [4:0] i_14_reg_1355;
reg   [10:0] buf_addr_17_reg_1360;
reg   [10:0] buf_addr_18_reg_1366;
wire   [7:0] e_fu_913_p2;
reg   [7:0] e_reg_1372;
wire    ap_CS_fsm_state31;
wire   [7:0] tmp_48_i_fu_999_p2;
reg   [7:0] tmp_48_i_reg_1379;
wire    ap_CS_fsm_state33;
wire   [7:0] tmp_52_i_fu_1044_p2;
reg   [7:0] tmp_52_i_reg_1384;
wire    ap_CS_fsm_state36;
wire   [7:0] tmp_56_i_fu_1089_p2;
reg   [7:0] tmp_56_i_reg_1389;
wire    ap_CS_fsm_state39;
wire   [3:0] i_9_fu_1100_p2;
wire    ap_CS_fsm_state43;
wire    grp_aes_addRoundKey_fu_483_ap_done;
reg    ap_block_state43_on_subcall_done;
wire   [0:0] tmp_i3_fu_1106_p2;
reg   [0:0] tmp_i3_reg_1399;
wire    ap_CS_fsm_pp3_stage0;
wire    ap_block_state45_pp3_stage0_iter0;
wire    ap_block_state48_pp3_stage0_iter1;
wire    ap_block_pp3_stage0_11001;
wire   [4:0] i_7_fu_1112_p2;
reg   [4:0] i_7_reg_1403;
reg    ap_enable_reg_pp3_iter0;
reg   [10:0] buf_addr_13_reg_1409;
wire    ap_CS_fsm_pp3_stage1;
wire    ap_block_state46_pp3_stage1_iter0;
wire    ap_block_pp3_stage1_11001;
wire    ap_CS_fsm_pp3_stage2;
wire    ap_block_state47_pp3_stage2_iter0;
wire    ap_block_pp3_stage2_11001;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage2_subdone;
wire    ap_block_pp3_stage0_subdone;
reg    ap_condition_pp3_exit_iter0_state45;
reg    ap_enable_reg_pp3_iter1;
wire    ap_block_pp3_stage2_subdone;
reg   [4:0] ctx_body_key_address0;
reg    ctx_body_key_ce0;
reg    ctx_body_key_we0;
reg   [7:0] ctx_body_key_d0;
wire   [7:0] ctx_body_key_q0;
reg    ctx_body_key_ce1;
reg    ctx_body_key_we1;
wire   [7:0] ctx_body_key_q1;
reg   [4:0] ctx_body_enckey_address0;
reg    ctx_body_enckey_ce0;
reg    ctx_body_enckey_we0;
wire   [7:0] ctx_body_enckey_q0;
reg   [4:0] ctx_body_deckey_address0;
reg    ctx_body_deckey_ce0;
reg    ctx_body_deckey_we0;
reg   [7:0] ctx_body_deckey_d0;
wire   [7:0] ctx_body_deckey_q0;
reg    ctx_body_deckey_ce1;
reg    ctx_body_deckey_we1;
wire   [7:0] ctx_body_deckey_q1;
wire    grp_aes_expandEncKey_fu_474_ap_start;
wire    grp_aes_expandEncKey_fu_474_ap_idle;
wire    grp_aes_expandEncKey_fu_474_ap_ready;
wire   [4:0] grp_aes_expandEncKey_fu_474_k_address0;
wire    grp_aes_expandEncKey_fu_474_k_ce0;
wire    grp_aes_expandEncKey_fu_474_k_we0;
wire   [7:0] grp_aes_expandEncKey_fu_474_k_d0;
reg   [7:0] grp_aes_expandEncKey_fu_474_k_q0;
wire   [4:0] grp_aes_expandEncKey_fu_474_k_address1;
wire    grp_aes_expandEncKey_fu_474_k_ce1;
wire    grp_aes_expandEncKey_fu_474_k_we1;
wire   [7:0] grp_aes_expandEncKey_fu_474_k_d1;
reg   [7:0] grp_aes_expandEncKey_fu_474_k_q1;
reg   [7:0] grp_aes_expandEncKey_fu_474_rc_read;
wire    grp_aes_addRoundKey_fu_483_ap_start;
wire    grp_aes_addRoundKey_fu_483_ap_idle;
wire    grp_aes_addRoundKey_fu_483_ap_ready;
wire   [10:0] grp_aes_addRoundKey_fu_483_buf_r_address0;
wire    grp_aes_addRoundKey_fu_483_buf_r_ce0;
wire    grp_aes_addRoundKey_fu_483_buf_r_we0;
wire   [7:0] grp_aes_addRoundKey_fu_483_buf_r_d0;
wire   [4:0] grp_aes_addRoundKey_fu_483_key_address0;
wire    grp_aes_addRoundKey_fu_483_key_ce0;
reg   [5:0] grp_aes_addRoundKey_fu_483_key_offset;
reg   [7:0] rcon_reg_395;
wire    ap_CS_fsm_state4;
reg   [2:0] i_1_reg_407;
reg   [4:0] ap_phi_mux_i_i_phi_fu_422_p4;
wire    ap_block_pp1_stage0;
reg   [3:0] i_2_reg_429;
reg   [4:0] ap_phi_mux_i_i1_phi_fu_445_p4;
wire    ap_block_pp2_stage0;
reg   [4:0] i_i3_reg_452;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state40;
reg   [4:0] ap_phi_mux_i_i2_phi_fu_467_p4;
wire    ap_block_pp3_stage0;
reg    ap_reg_grp_aes_expandEncKey_fu_474_ap_start;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state60;
reg    ap_reg_grp_aes_addRoundKey_fu_483_ap_start;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state61;
wire    ap_CS_fsm_state44;
wire    ap_CS_fsm_state62;
wire    ap_block_pp0_stage0;
wire    ap_block_pp1_stage1;
wire   [63:0] sum_i_cast_fu_627_p1;
wire   [63:0] sum_i8_cast_fu_644_p1;
wire   [63:0] sum3_i_cast_fu_654_p1;
wire   [63:0] sum5_i_cast_fu_664_p1;
wire   [63:0] sum7_i_cast_fu_674_p1;
wire   [63:0] sum9_i_cast_fu_684_p1;
wire   [63:0] sum1_i_cast_fu_694_p1;
wire   [63:0] sum2_i_cast_fu_704_p1;
wire   [63:0] sum4_i_cast_fu_714_p1;
wire   [63:0] sum6_i_cast_fu_724_p1;
wire   [63:0] sum8_i_cast_fu_734_p1;
wire   [63:0] sum10_i_cast_fu_744_p1;
wire   [63:0] sum11_i_cast_fu_754_p1;
wire   [63:0] sum_i4_cast_fu_801_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] tmp_32_i_fu_806_p1;
wire    ap_block_pp2_stage2;
wire   [63:0] sum_i3_cast_fu_828_p1;
wire   [63:0] sum3_i2_cast_fu_852_p1;
wire   [63:0] sum5_i2_cast_fu_877_p1;
wire   [63:0] sum7_i2_cast_fu_896_p1;
wire   [63:0] sum_i2_cast_fu_1130_p1;
wire    ap_block_pp3_stage1;
wire   [63:0] tmp_32_i1_fu_1135_p1;
wire    ap_block_pp3_stage2;
reg   [7:0] rcon_1_fu_136;
wire   [7:0] tmp_117_i_fu_632_p2;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire   [7:0] tmp_44_i_fu_953_p2;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state56;
wire    ap_CS_fsm_state57;
wire    ap_CS_fsm_state58;
wire   [4:0] tmp_119_i_fu_599_p2;
wire  signed [7:0] i_6_cast_fu_610_p1;
wire   [11:0] tmp_i_cast_fu_618_p1;
wire   [11:0] sum_i_fu_622_p2;
wire   [11:0] sum_i8_fu_639_p2;
wire   [11:0] sum3_i_fu_649_p2;
wire   [11:0] sum5_i_fu_659_p2;
wire   [11:0] sum7_i_fu_669_p2;
wire   [11:0] sum9_i_fu_679_p2;
wire   [11:0] sum1_i_fu_689_p2;
wire   [11:0] sum2_i_fu_699_p2;
wire   [11:0] sum4_i_fu_709_p2;
wire   [11:0] sum6_i_fu_719_p2;
wire   [11:0] sum8_i_fu_729_p2;
wire   [11:0] sum10_i_fu_739_p2;
wire   [11:0] sum11_i_fu_749_p2;
wire  signed [7:0] i_8_cast_fu_789_p1;
wire   [11:0] tmp_i3_cast_fu_792_p1;
wire   [11:0] sum_i4_fu_796_p2;
wire   [11:0] tmp_i4_cast_fu_819_p1;
wire   [11:0] sum_i3_fu_823_p2;
wire   [3:0] tmp_34_i_fu_837_p2;
wire   [11:0] tmp_35_i_cast_fu_843_p1;
wire   [11:0] sum3_i2_fu_847_p2;
wire   [3:0] tmp_36_i1_fu_863_p2;
wire   [11:0] tmp_37_i_cast_fu_868_p1;
wire   [11:0] sum5_i2_fu_872_p2;
wire   [3:0] tmp_38_i_fu_882_p2;
wire   [11:0] tmp_39_i_cast_fu_887_p1;
wire   [11:0] sum7_i2_fu_891_p2;
wire   [7:0] x_assign_fu_901_p2;
wire   [7:0] tmp1_fu_907_p2;
wire   [7:0] tmp_89_fu_927_p2;
wire   [0:0] tmp_88_fu_919_p3;
wire   [7:0] tmp_30_i_i_fu_933_p2;
wire   [7:0] tmp_31_i_i_fu_939_p3;
wire   [7:0] tmp2_fu_947_p2;
wire   [7:0] x_assign_1_fu_960_p2;
wire   [7:0] tmp_91_fu_974_p2;
wire   [0:0] tmp_90_fu_966_p3;
wire   [7:0] tmp_30_i3_i_fu_980_p2;
wire   [7:0] tmp_31_i4_i_fu_986_p3;
wire   [7:0] tmp3_fu_994_p2;
wire   [7:0] x_assign_2_fu_1005_p2;
wire   [7:0] tmp_93_fu_1019_p2;
wire   [0:0] tmp_92_fu_1011_p3;
wire   [7:0] tmp_30_i7_i_fu_1025_p2;
wire   [7:0] tmp_31_i8_i_fu_1031_p3;
wire   [7:0] tmp4_fu_1039_p2;
wire   [7:0] x_assign_3_fu_1050_p2;
wire   [7:0] tmp_95_fu_1064_p2;
wire   [0:0] tmp_94_fu_1056_p3;
wire   [7:0] tmp_30_i11_i_fu_1070_p2;
wire   [7:0] tmp_31_i12_i_fu_1076_p3;
wire   [7:0] tmp5_fu_1084_p2;
wire  signed [7:0] i_7_cast_fu_1118_p1;
wire   [11:0] tmp_i2_cast_fu_1121_p1;
wire   [11:0] sum_i2_fu_1125_p2;
reg   [57:0] ap_NS_fsm;
wire    ap_block_pp2_stage1_subdone;
wire    ap_block_pp3_stage1_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_idle_pp3;
wire    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 58'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_reg_grp_aes_expandEncKey_fu_474_ap_start = 1'b0;
#0 ap_reg_grp_aes_addRoundKey_fu_483_ap_start = 1'b0;
end

aes_expandEncKey_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sbox_address0),
    .ce0(sbox_ce0),
    .q0(sbox_q0),
    .address1(8'd0),
    .ce1(1'b0),
    .q1(sbox_q1),
    .address2(8'd0),
    .ce2(1'b0),
    .q2(sbox_q2)
);

aes256_encrypt_ecdEe #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ctx_body_key_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_body_key_address0),
    .ce0(ctx_body_key_ce0),
    .we0(ctx_body_key_we0),
    .d0(ctx_body_key_d0),
    .q0(ctx_body_key_q0),
    .address1(grp_aes_expandEncKey_fu_474_k_address1),
    .ce1(ctx_body_key_ce1),
    .we1(ctx_body_key_we1),
    .d1(grp_aes_expandEncKey_fu_474_k_d1),
    .q1(ctx_body_key_q1)
);

aes256_encrypt_eceOg #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ctx_body_enckey_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_body_enckey_address0),
    .ce0(ctx_body_enckey_ce0),
    .we0(ctx_body_enckey_we0),
    .d0(k_q0),
    .q0(ctx_body_enckey_q0)
);

aes256_encrypt_ecdEe #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ctx_body_deckey_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_body_deckey_address0),
    .ce0(ctx_body_deckey_ce0),
    .we0(ctx_body_deckey_we0),
    .d0(ctx_body_deckey_d0),
    .q0(ctx_body_deckey_q0),
    .address1(grp_aes_expandEncKey_fu_474_k_address1),
    .ce1(ctx_body_deckey_ce1),
    .we1(ctx_body_deckey_we1),
    .d1(grp_aes_expandEncKey_fu_474_k_d1),
    .q1(ctx_body_deckey_q1)
);

aes_expandEncKey grp_aes_expandEncKey_fu_474(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_expandEncKey_fu_474_ap_start),
    .ap_done(grp_aes_expandEncKey_fu_474_ap_done),
    .ap_idle(grp_aes_expandEncKey_fu_474_ap_idle),
    .ap_ready(grp_aes_expandEncKey_fu_474_ap_ready),
    .k_address0(grp_aes_expandEncKey_fu_474_k_address0),
    .k_ce0(grp_aes_expandEncKey_fu_474_k_ce0),
    .k_we0(grp_aes_expandEncKey_fu_474_k_we0),
    .k_d0(grp_aes_expandEncKey_fu_474_k_d0),
    .k_q0(grp_aes_expandEncKey_fu_474_k_q0),
    .k_address1(grp_aes_expandEncKey_fu_474_k_address1),
    .k_ce1(grp_aes_expandEncKey_fu_474_k_ce1),
    .k_we1(grp_aes_expandEncKey_fu_474_k_we1),
    .k_d1(grp_aes_expandEncKey_fu_474_k_d1),
    .k_q1(grp_aes_expandEncKey_fu_474_k_q1),
    .rc_read(grp_aes_expandEncKey_fu_474_rc_read),
    .ap_return(grp_aes_expandEncKey_fu_474_ap_return)
);

aes_addRoundKey grp_aes_addRoundKey_fu_483(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_addRoundKey_fu_483_ap_start),
    .ap_done(grp_aes_addRoundKey_fu_483_ap_done),
    .ap_idle(grp_aes_addRoundKey_fu_483_ap_idle),
    .ap_ready(grp_aes_addRoundKey_fu_483_ap_ready),
    .buf_r_address0(grp_aes_addRoundKey_fu_483_buf_r_address0),
    .buf_r_ce0(grp_aes_addRoundKey_fu_483_buf_r_ce0),
    .buf_r_we0(grp_aes_addRoundKey_fu_483_buf_r_we0),
    .buf_r_d0(grp_aes_addRoundKey_fu_483_buf_r_d0),
    .buf_r_q0(buf_r_q0),
    .buf_offset1(tmp_84_reg_1302),
    .key_address0(grp_aes_addRoundKey_fu_483_key_address0),
    .key_ce0(grp_aes_addRoundKey_fu_483_key_ce0),
    .key_q0(ctx_body_key_q0),
    .key_offset(grp_aes_addRoundKey_fu_483_key_offset)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((tmp_81_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state7) & (((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0))))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state7);
        end else if ((((1'b0 == ap_block_pp1_stage1_subdone) & (1'b1 == ap_CS_fsm_pp1_stage1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((tmp_81_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((exitcond_fu_767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state12) & (((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0))))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
        end else if ((((1'b0 == ap_block_pp2_stage2_subdone) & (1'b1 == ap_CS_fsm_pp2_stage2)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((exitcond_fu_767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_condition_pp3_exit_iter0_state45) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((exitcond_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp3_exit_iter0_state45) & (((1'b0 == ap_block_pp3_stage2_subdone) & (1'b1 == ap_CS_fsm_pp3_stage2)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0))))) begin
            ap_enable_reg_pp3_iter1 <= (1'b1 ^ ap_condition_pp3_exit_iter0_state45);
        end else if ((((1'b0 == ap_block_pp3_stage2_subdone) & (1'b1 == ap_CS_fsm_pp3_stage2)) | ((1'b0 == ap_block_pp3_stage0_subdone) & (1'b1 == ap_CS_fsm_pp3_stage0)))) begin
            ap_enable_reg_pp3_iter1 <= ap_enable_reg_pp3_iter0;
        end else if (((exitcond_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_aes_addRoundKey_fu_483_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state61) | (1'b1 == ap_CS_fsm_state42) | ((tmp_85_reg_1311 == 1'd1) & (tmp_86_fu_811_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28)))) begin
            ap_reg_grp_aes_addRoundKey_fu_483_ap_start <= 1'b1;
        end else if ((grp_aes_addRoundKey_fu_483_ap_ready == 1'b1)) begin
            ap_reg_grp_aes_addRoundKey_fu_483_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_aes_expandEncKey_fu_474_ap_start <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state59) | ((tmp_81_fu_575_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5)) | ((tmp_85_reg_1311 == 1'd0) & (tmp_86_fu_811_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28)))) begin
            ap_reg_grp_aes_expandEncKey_fu_474_ap_start <= 1'b1;
        end else if ((grp_aes_expandEncKey_fu_474_ap_ready == 1'b1)) begin
            ap_reg_grp_aes_expandEncKey_fu_474_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_407 <= 3'd7;
    end else if (((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        i_1_reg_407 <= phitmp_reg_1188;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_2_reg_429 <= 4'd1;
    end else if (((1'b0 == ap_block_state43_on_subcall_done) & (1'b1 == ap_CS_fsm_state43))) begin
        i_2_reg_429 <= i_9_fu_1100_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_i2_reg_1315 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_i1_reg_441 <= i_8_reg_1319;
    end else if (((exitcond_fu_767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        i_i1_reg_441 <= 5'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        i_i2_reg_463 <= 5'd16;
    end else if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_i3_reg_1399 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_i2_reg_463 <= i_7_reg_1403;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        i_i3_reg_452 <= i_14_reg_1355;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        i_i3_reg_452 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_81_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        i_i_reg_418 <= 5'd16;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_i_reg_1198 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_i_reg_418 <= i_6_reg_1202;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_fu_558_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_384 <= i_5_fu_564_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_384 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        rcon_1_fu_136 <= grp_aes_expandEncKey_fu_474_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        rcon_1_fu_136 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        rcon_reg_395 <= 8'd1;
    end else if (((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        rcon_reg_395 <= grp_aes_expandEncKey_fu_474_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_498 <= buf_r_q1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        reg_498 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state29))) begin
        reg_504 <= buf_r_q0;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state17))) begin
        reg_504 <= buf_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22))) begin
        reg_511 <= buf_r_q0;
    end else if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_511 <= buf_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        buf_addr_10_reg_1292 <= sum10_i_cast_fu_744_p1;
        buf_addr_11_reg_1297 <= sum11_i_cast_fu_754_p1;
        buf_addr_1_reg_1246 <= sum3_i_cast_fu_654_p1;
        buf_addr_2_reg_1252 <= sum5_i_cast_fu_664_p1;
        buf_addr_3_reg_1257 <= sum7_i_cast_fu_674_p1;
        buf_addr_4_reg_1262 <= sum9_i_cast_fu_684_p1;
        buf_addr_5_reg_1267 <= sum1_i_cast_fu_694_p1;
        buf_addr_6_reg_1272 <= sum2_i_cast_fu_704_p1;
        buf_addr_7_reg_1277 <= sum4_i_cast_fu_714_p1;
        buf_addr_8_reg_1282 <= sum6_i_cast_fu_724_p1;
        buf_addr_9_reg_1287 <= sum8_i_cast_fu_734_p1;
        buf_addr_reg_1240 <= sum_i8_cast_fu_644_p1;
        tmp_84_reg_1302 <= tmp_84_fu_759_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage1_11001) & (tmp_i_reg_1198 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        buf_addr_12_reg_1228 <= sum_i_cast_fu_627_p1;
        tmp_i_20_reg_1218[7 : 0] <= tmp_i_20_fu_613_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage1_11001) & (tmp_i3_reg_1399 == 1'd0) & (1'b1 == ap_CS_fsm_pp3_stage1))) begin
        buf_addr_13_reg_1409 <= sum_i2_cast_fu_1130_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (tmp_i2_reg_1315 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        buf_addr_14_reg_1325 <= sum_i4_cast_fu_801_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_86_fu_811_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        buf_addr_15_reg_1338 <= sum_i3_cast_fu_828_p1;
        buf_addr_16_reg_1349 <= sum3_i2_cast_fu_852_p1;
        i_14_reg_1355 <= i_14_fu_857_p2;
        tmp_87_reg_1343 <= tmp_87_fu_833_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        buf_addr_17_reg_1360 <= sum5_i2_cast_fu_877_p1;
        buf_addr_18_reg_1366 <= sum7_i2_cast_fu_896_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        e_reg_1372 <= e_fu_913_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_i_fu_587_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_6_reg_1202 <= i_6_fu_593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (tmp_i3_fu_1106_p2 == 1'd0) & (ap_enable_reg_pp3_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        i_7_reg_1403 <= i_7_fu_1112_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (tmp_i2_fu_777_p2 == 1'd0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        i_8_reg_1319 <= i_8_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_81_fu_575_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phitmp_reg_1188 <= phitmp_fu_581_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state18))) begin
        reg_518 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state19))) begin
        reg_523 <= buf_r_q1;
        reg_528 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state20))) begin
        reg_533 <= buf_r_q1;
        reg_538 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state21))) begin
        reg_543 <= buf_r_q1;
        reg_548 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state59) | ((tmp_85_reg_1311 == 1'd0) & (tmp_86_fu_811_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28)))) begin
        reg_553 <= rcon_1_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (tmp_i_fu_587_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_120_i_reg_1208[4 : 0] <= tmp_120_i_fu_605_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        tmp_48_i_reg_1379 <= tmp_48_i_fu_999_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_52_i_reg_1384 <= tmp_52_i_fu_1044_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_56_i_reg_1389 <= tmp_56_i_fu_1089_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_fu_767_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        tmp_85_reg_1311 <= tmp_85_fu_773_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_i2_reg_1315 <= tmp_i2_fu_777_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp3_stage0_11001) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        tmp_i3_reg_1399 <= tmp_i3_fu_1106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_i_reg_1198 <= tmp_i_fu_587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_reg_1164 <= tmp_fu_558_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_fu_558_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_s_reg_1173[5 : 0] <= tmp_s_fu_570_p1[5 : 0];
    end
end

always @ (*) begin
    if ((tmp_fu_558_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_i_fu_587_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_i2_fu_777_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if ((tmp_i3_fu_1106_p2 == 1'd1)) begin
        ap_condition_pp3_exit_iter0_state45 = 1'b1;
    end else begin
        ap_condition_pp3_exit_iter0_state45 = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_aes_addRoundKey_fu_483_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state62)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp3_iter1 == 1'b0) & (ap_enable_reg_pp3_iter0 == 1'b0))) begin
        ap_idle_pp3 = 1'b1;
    end else begin
        ap_idle_pp3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (tmp_i2_reg_1315 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_mux_i_i1_phi_fu_445_p4 = i_8_reg_1319;
    end else begin
        ap_phi_mux_i_i1_phi_fu_445_p4 = i_i1_reg_441;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (tmp_i3_reg_1399 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        ap_phi_mux_i_i2_phi_fu_467_p4 = i_7_reg_1403;
    end else begin
        ap_phi_mux_i_i2_phi_fu_467_p4 = i_i2_reg_463;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (tmp_i_reg_1198 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_i_phi_fu_422_p4 = i_6_reg_1202;
    end else begin
        ap_phi_mux_i_i_phi_fu_422_p4 = i_i_reg_418;
    end
end

always @ (*) begin
    if (((grp_aes_addRoundKey_fu_483_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage1) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        buf_r_address0 = sum_i2_cast_fu_1130_p1;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        buf_r_address0 = buf_addr_18_reg_1366;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buf_r_address0 = buf_addr_17_reg_1360;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        buf_r_address0 = sum7_i2_cast_fu_896_p1;
    end else if (((tmp_86_fu_811_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        buf_r_address0 = sum3_i2_cast_fu_852_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22))) begin
        buf_r_address0 = buf_addr_1_reg_1246;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state21))) begin
        buf_r_address0 = buf_addr_11_reg_1297;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_r_address0 = buf_addr_9_reg_1287;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state58))) begin
        buf_r_address0 = buf_addr_7_reg_1277;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state57))) begin
        buf_r_address0 = buf_addr_5_reg_1267;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state17))) begin
        buf_r_address0 = buf_addr_3_reg_1257;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        buf_r_address0 = buf_addr_reg_1240;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_r_address0 = buf_addr_14_reg_1325;
    end else if (((1'b0 == ap_block_pp2_stage1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        buf_r_address0 = sum_i4_cast_fu_801_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_r_address0 = buf_addr_12_reg_1228;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        buf_r_address0 = sum_i_cast_fu_627_p1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state44) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        buf_r_address0 = grp_aes_addRoundKey_fu_483_buf_r_address0;
    end else begin
        buf_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_r_address1 = buf_addr_13_reg_1409;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        buf_r_address1 = buf_addr_18_reg_1366;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        buf_r_address1 = buf_addr_17_reg_1360;
    end else if (((1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32))) begin
        buf_r_address1 = buf_addr_16_reg_1349;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        buf_r_address1 = buf_addr_15_reg_1338;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        buf_r_address1 = sum5_i2_cast_fu_877_p1;
    end else if (((tmp_86_fu_811_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        buf_r_address1 = sum_i3_cast_fu_828_p1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22))) begin
        buf_r_address1 = buf_addr_reg_1240;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state21))) begin
        buf_r_address1 = buf_addr_10_reg_1292;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_r_address1 = buf_addr_8_reg_1282;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state58))) begin
        buf_r_address1 = buf_addr_6_reg_1272;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state57))) begin
        buf_r_address1 = buf_addr_4_reg_1262;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state17))) begin
        buf_r_address1 = buf_addr_2_reg_1252;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        buf_r_address1 = buf_addr_1_reg_1246;
    end else begin
        buf_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | ((1'b0 == ap_block_pp3_stage1_11001) & (1'b1 == ap_CS_fsm_pp3_stage1) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((tmp_86_fu_811_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        buf_r_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state44) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        buf_r_ce0 = grp_aes_addRoundKey_fu_483_buf_r_ce0;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state50) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | ((1'b0 == ap_block_pp3_stage0_11001) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60)) | ((tmp_86_fu_811_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state28)))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        buf_r_d0 = tmp_56_i_reg_1389;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        buf_r_d0 = tmp_52_i_reg_1384;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        buf_r_d0 = reg_504;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state59))) begin
        buf_r_d0 = reg_533;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state58))) begin
        buf_r_d0 = reg_543;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state57))) begin
        buf_r_d0 = reg_523;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state23))) begin
        buf_r_d0 = reg_498;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22))) begin
        buf_r_d0 = reg_511;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        buf_r_d0 = sbox_q0;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        buf_r_d0 = tmp_117_i_fu_632_p2;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state44) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        buf_r_d0 = grp_aes_addRoundKey_fu_483_buf_r_d0;
    end else begin
        buf_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0))) begin
        buf_r_d1 = sbox_q0;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        buf_r_d1 = tmp_48_i_reg_1379;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        buf_r_d1 = tmp_44_i_fu_953_p2;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state27))) begin
        buf_r_d1 = reg_511;
    end else if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state59))) begin
        buf_r_d1 = reg_548;
    end else if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state58))) begin
        buf_r_d1 = reg_538;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state57))) begin
        buf_r_d1 = reg_528;
    end else if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state23))) begin
        buf_r_d1 = reg_518;
    end else if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22))) begin
        buf_r_d1 = reg_504;
    end else begin
        buf_r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | ((1'b0 == ap_block_pp2_stage0_11001) & (tmp_i2_reg_1315 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (tmp_i_reg_1198 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60)))) begin
        buf_r_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state44) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        buf_r_we0 = grp_aes_addRoundKey_fu_483_buf_r_we0;
    end else begin
        buf_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state59) | (1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state57) | ((1'b0 == ap_block_pp3_stage0_11001) & (tmp_i3_reg_1399 == 1'd0) & (ap_enable_reg_pp3_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp3_stage0)) | ((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ctx_body_deckey_address0 = tmp_s_reg_1173;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_body_deckey_address0 = grp_aes_expandEncKey_fu_474_k_address0;
    end else begin
        ctx_body_deckey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ctx_body_deckey_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_body_deckey_ce0 = grp_aes_expandEncKey_fu_474_k_ce0;
    end else begin
        ctx_body_deckey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_body_deckey_ce1 = grp_aes_expandEncKey_fu_474_k_ce1;
    end else begin
        ctx_body_deckey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ctx_body_deckey_d0 = k_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_body_deckey_d0 = grp_aes_expandEncKey_fu_474_k_d0;
    end else begin
        ctx_body_deckey_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ctx_body_deckey_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_body_deckey_we0 = grp_aes_expandEncKey_fu_474_k_we0;
    end else begin
        ctx_body_deckey_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ctx_body_deckey_we1 = grp_aes_expandEncKey_fu_474_k_we1;
    end else begin
        ctx_body_deckey_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        ctx_body_enckey_address0 = tmp_i_20_fu_613_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ctx_body_enckey_address0 = tmp_120_i_fu_605_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ctx_body_enckey_address0 = tmp_s_reg_1173;
    end else begin
        ctx_body_enckey_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ctx_body_enckey_ce0 = 1'b1;
    end else begin
        ctx_body_enckey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_reg_1164 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ctx_body_enckey_we0 = 1'b1;
    end else begin
        ctx_body_enckey_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ctx_body_key_address0 = tmp_i_20_reg_1218;
    end else if (((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        ctx_body_key_address0 = tmp_120_i_reg_1208;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state44) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        ctx_body_key_address0 = grp_aes_addRoundKey_fu_483_key_address0;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        ctx_body_key_address0 = grp_aes_expandEncKey_fu_474_k_address0;
    end else begin
        ctx_body_key_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage1_11001) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        ctx_body_key_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state62) | (1'b1 == ap_CS_fsm_state44) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        ctx_body_key_ce0 = grp_aes_addRoundKey_fu_483_key_ce0;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        ctx_body_key_ce0 = grp_aes_expandEncKey_fu_474_k_ce0;
    end else begin
        ctx_body_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        ctx_body_key_ce1 = grp_aes_expandEncKey_fu_474_k_ce1;
    end else begin
        ctx_body_key_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        ctx_body_key_d0 = ctx_body_enckey_q0;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        ctx_body_key_d0 = grp_aes_expandEncKey_fu_474_k_d0;
    end else begin
        ctx_body_key_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage1_11001) & (tmp_i_reg_1198 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_11001) & (tmp_i_reg_1198 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        ctx_body_key_we0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        ctx_body_key_we0 = grp_aes_expandEncKey_fu_474_k_we0;
    end else begin
        ctx_body_key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        ctx_body_key_we1 = grp_aes_expandEncKey_fu_474_k_we1;
    end else begin
        ctx_body_key_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state62) | ((tmp_85_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_state43)))) begin
        grp_aes_addRoundKey_fu_483_key_offset = 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        grp_aes_addRoundKey_fu_483_key_offset = 6'd16;
    end else begin
        grp_aes_addRoundKey_fu_483_key_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_aes_expandEncKey_fu_474_k_q0 = ctx_body_key_q0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_aes_expandEncKey_fu_474_k_q0 = ctx_body_deckey_q0;
    end else begin
        grp_aes_expandEncKey_fu_474_k_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_aes_expandEncKey_fu_474_k_q1 = ctx_body_key_q1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_aes_expandEncKey_fu_474_k_q1 = ctx_body_deckey_q1;
    end else begin
        grp_aes_expandEncKey_fu_474_k_q1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41))) begin
        grp_aes_expandEncKey_fu_474_rc_read = reg_553;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_aes_expandEncKey_fu_474_rc_read = rcon_reg_395;
    end else begin
        grp_aes_expandEncKey_fu_474_rc_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        k_ce0 = 1'b1;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp3_stage2) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
        sbox_address0 = tmp_32_i1_fu_1135_p1;
    end else if (((1'b0 == ap_block_pp2_stage2) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        sbox_address0 = tmp_32_i_fu_806_p1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state6))) begin
        sbox_address0 = 8'd0;
    end else begin
        sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp3_stage2_11001) & (1'b1 == ap_CS_fsm_pp3_stage2) & (ap_enable_reg_pp3_iter0 == 1'b1)) | ((1'b0 == ap_block_pp2_stage2_11001) & (1'b1 == ap_CS_fsm_pp2_stage2) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        sbox_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state60) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state6))) begin
        sbox_ce0 = 1'b0;
    end else begin
        sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_fu_558_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (tmp_fu_558_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((tmp_81_fu_575_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (tmp_i_fu_587_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (tmp_i_fu_587_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((exitcond_fu_767_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (tmp_i2_fu_777_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (tmp_i2_fu_777_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_pp2_stage2 : begin
            if ((1'b0 == ap_block_pp2_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage2;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((tmp_85_reg_1311 == 1'd1) & (tmp_86_fu_811_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else if (((tmp_85_reg_1311 == 1'd0) & (tmp_86_fu_811_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if (((1'b0 == ap_block_state43_on_subcall_done) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            if (((grp_aes_addRoundKey_fu_483_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_pp3_stage0 : begin
            if ((~((1'b0 == ap_block_pp3_stage0_subdone) & (tmp_i3_fu_1106_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1)) & (1'b0 == ap_block_pp3_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end else if (((1'b0 == ap_block_pp3_stage0_subdone) & (tmp_i3_fu_1106_p2 == 1'd1) & (ap_enable_reg_pp3_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end
        end
        ap_ST_fsm_pp3_stage1 : begin
            if ((1'b0 == ap_block_pp3_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage1;
            end
        end
        ap_ST_fsm_pp3_stage2 : begin
            if ((1'b0 == ap_block_pp3_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp3_stage2;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((grp_aes_expandEncKey_fu_474_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state61;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            if (((grp_aes_addRoundKey_fu_483_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state62))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state62;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd57];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp3_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state43_on_subcall_done = ((grp_aes_addRoundKey_fu_483_ap_done == 1'b0) & (tmp_85_reg_1311 == 1'd0));
end

assign ap_block_state45_pp3_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp3_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp3_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp3_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_enable_pp3 = (ap_idle_pp3 ^ 1'b1);

assign e_fu_913_p2 = (tmp1_fu_907_p2 ^ reg_511);

assign exitcond_fu_767_p2 = ((i_2_reg_429 == 4'd14) ? 1'b1 : 1'b0);

assign grp_aes_addRoundKey_fu_483_ap_start = ap_reg_grp_aes_addRoundKey_fu_483_ap_start;

assign grp_aes_expandEncKey_fu_474_ap_start = ap_reg_grp_aes_expandEncKey_fu_474_ap_start;

assign i_14_fu_857_p2 = (5'd4 + i_i3_reg_452);

assign i_5_fu_564_p2 = (i_reg_384 + 6'd1);

assign i_6_cast_fu_610_p1 = $signed(i_6_reg_1202);

assign i_6_fu_593_p2 = ($signed(ap_phi_mux_i_i_phi_fu_422_p4) + $signed(5'd31));

assign i_7_cast_fu_1118_p1 = $signed(i_7_reg_1403);

assign i_7_fu_1112_p2 = ($signed(ap_phi_mux_i_i2_phi_fu_467_p4) + $signed(5'd31));

assign i_8_cast_fu_789_p1 = $signed(i_8_reg_1319);

assign i_8_fu_783_p2 = ($signed(ap_phi_mux_i_i1_phi_fu_445_p4) + $signed(5'd31));

assign i_9_fu_1100_p2 = (i_2_reg_429 + 4'd1);

assign k_address0 = tmp_s_fu_570_p1;

assign phitmp_fu_581_p2 = ($signed(i_1_reg_407) + $signed(3'd7));

assign sum10_i_cast_fu_744_p1 = sum10_i_fu_739_p2;

assign sum10_i_fu_739_p2 = (12'd14 + buf_offset2);

assign sum11_i_cast_fu_754_p1 = sum11_i_fu_749_p2;

assign sum11_i_fu_749_p2 = (12'd6 + buf_offset2);

assign sum1_i_cast_fu_694_p1 = sum1_i_fu_689_p2;

assign sum1_i_fu_689_p2 = (12'd2 + buf_offset2);

assign sum2_i_cast_fu_704_p1 = sum2_i_fu_699_p2;

assign sum2_i_fu_699_p2 = (12'd3 + buf_offset2);

assign sum3_i2_cast_fu_852_p1 = sum3_i2_fu_847_p2;

assign sum3_i2_fu_847_p2 = (buf_offset2 + tmp_35_i_cast_fu_843_p1);

assign sum3_i_cast_fu_654_p1 = sum3_i_fu_649_p2;

assign sum3_i_fu_649_p2 = (12'd5 + buf_offset2);

assign sum4_i_cast_fu_714_p1 = sum4_i_fu_709_p2;

assign sum4_i_fu_709_p2 = (12'd15 + buf_offset2);

assign sum5_i2_cast_fu_877_p1 = sum5_i2_fu_872_p2;

assign sum5_i2_fu_872_p2 = (buf_offset2 + tmp_37_i_cast_fu_868_p1);

assign sum5_i_cast_fu_664_p1 = sum5_i_fu_659_p2;

assign sum5_i_fu_659_p2 = (12'd9 + buf_offset2);

assign sum6_i_cast_fu_724_p1 = sum6_i_fu_719_p2;

assign sum6_i_fu_719_p2 = (12'd11 + buf_offset2);

assign sum7_i2_cast_fu_896_p1 = sum7_i2_fu_891_p2;

assign sum7_i2_fu_891_p2 = (buf_offset2 + tmp_39_i_cast_fu_887_p1);

assign sum7_i_cast_fu_674_p1 = sum7_i_fu_669_p2;

assign sum7_i_fu_669_p2 = (12'd13 + buf_offset2);

assign sum8_i_cast_fu_734_p1 = sum8_i_fu_729_p2;

assign sum8_i_fu_729_p2 = (12'd7 + buf_offset2);

assign sum9_i_cast_fu_684_p1 = sum9_i_fu_679_p2;

assign sum9_i_fu_679_p2 = (12'd10 + buf_offset2);

assign sum_i2_cast_fu_1130_p1 = sum_i2_fu_1125_p2;

assign sum_i2_fu_1125_p2 = (tmp_i2_cast_fu_1121_p1 + buf_offset2);

assign sum_i3_cast_fu_828_p1 = sum_i3_fu_823_p2;

assign sum_i3_fu_823_p2 = (buf_offset2 + tmp_i4_cast_fu_819_p1);

assign sum_i4_cast_fu_801_p1 = sum_i4_fu_796_p2;

assign sum_i4_fu_796_p2 = (tmp_i3_cast_fu_792_p1 + buf_offset2);

assign sum_i8_cast_fu_644_p1 = sum_i8_fu_639_p2;

assign sum_i8_fu_639_p2 = (12'd1 + buf_offset2);

assign sum_i_cast_fu_627_p1 = sum_i_fu_622_p2;

assign sum_i_fu_622_p2 = (tmp_i_cast_fu_618_p1 + buf_offset2);

assign tmp1_fu_907_p2 = (x_assign_fu_901_p2 ^ reg_518);

assign tmp2_fu_947_p2 = (tmp_31_i_i_fu_939_p3 ^ e_fu_913_p2);

assign tmp3_fu_994_p2 = (tmp_31_i4_i_fu_986_p3 ^ e_reg_1372);

assign tmp4_fu_1039_p2 = (tmp_31_i8_i_fu_1031_p3 ^ e_reg_1372);

assign tmp5_fu_1084_p2 = (tmp_31_i12_i_fu_1076_p3 ^ e_reg_1372);

assign tmp_117_i_fu_632_p2 = (ctx_body_enckey_q0 ^ buf_r_q0);

assign tmp_119_i_fu_599_p2 = (ap_phi_mux_i_i_phi_fu_422_p4 + 5'd15);

assign tmp_120_i_fu_605_p1 = tmp_119_i_fu_599_p2;

assign tmp_30_i11_i_fu_1070_p2 = (tmp_95_fu_1064_p2 ^ 8'd27);

assign tmp_30_i3_i_fu_980_p2 = (tmp_91_fu_974_p2 ^ 8'd27);

assign tmp_30_i7_i_fu_1025_p2 = (tmp_93_fu_1019_p2 ^ 8'd27);

assign tmp_30_i_i_fu_933_p2 = (tmp_89_fu_927_p2 ^ 8'd27);

assign tmp_31_i12_i_fu_1076_p3 = ((tmp_94_fu_1056_p3[0:0] === 1'b1) ? tmp_30_i11_i_fu_1070_p2 : tmp_95_fu_1064_p2);

assign tmp_31_i4_i_fu_986_p3 = ((tmp_90_fu_966_p3[0:0] === 1'b1) ? tmp_30_i3_i_fu_980_p2 : tmp_91_fu_974_p2);

assign tmp_31_i8_i_fu_1031_p3 = ((tmp_92_fu_1011_p3[0:0] === 1'b1) ? tmp_30_i7_i_fu_1025_p2 : tmp_93_fu_1019_p2);

assign tmp_31_i_i_fu_939_p3 = ((tmp_88_fu_919_p3[0:0] === 1'b1) ? tmp_30_i_i_fu_933_p2 : tmp_89_fu_927_p2);

assign tmp_32_i1_fu_1135_p1 = buf_r_q0;

assign tmp_32_i_fu_806_p1 = buf_r_q0;

assign tmp_34_i_fu_837_p2 = (tmp_87_fu_833_p1 | 4'd1);

assign tmp_35_i_cast_fu_843_p1 = tmp_34_i_fu_837_p2;

assign tmp_36_i1_fu_863_p2 = (tmp_87_reg_1343 | 4'd2);

assign tmp_37_i_cast_fu_868_p1 = tmp_36_i1_fu_863_p2;

assign tmp_38_i_fu_882_p2 = (tmp_87_reg_1343 | 4'd3);

assign tmp_39_i_cast_fu_887_p1 = tmp_38_i_fu_882_p2;

assign tmp_44_i_fu_953_p2 = (tmp2_fu_947_p2 ^ reg_498);

assign tmp_48_i_fu_999_p2 = (tmp3_fu_994_p2 ^ buf_r_q1);

assign tmp_52_i_fu_1044_p2 = (tmp4_fu_1039_p2 ^ buf_r_q1);

assign tmp_56_i_fu_1089_p2 = (tmp5_fu_1084_p2 ^ buf_r_q1);

assign tmp_81_fu_575_p2 = ((i_1_reg_407 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_84_fu_759_p1 = buf_offset2[10:0];

assign tmp_85_fu_773_p1 = i_2_reg_429[0:0];

assign tmp_86_fu_811_p3 = i_i3_reg_452[32'd4];

assign tmp_87_fu_833_p1 = i_i3_reg_452[3:0];

assign tmp_88_fu_919_p3 = x_assign_fu_901_p2[32'd7];

assign tmp_89_fu_927_p2 = x_assign_fu_901_p2 << 8'd1;

assign tmp_90_fu_966_p3 = x_assign_1_fu_960_p2[32'd7];

assign tmp_91_fu_974_p2 = x_assign_1_fu_960_p2 << 8'd1;

assign tmp_92_fu_1011_p3 = x_assign_2_fu_1005_p2[32'd7];

assign tmp_93_fu_1019_p2 = x_assign_2_fu_1005_p2 << 8'd1;

assign tmp_94_fu_1056_p3 = x_assign_3_fu_1050_p2[32'd7];

assign tmp_95_fu_1064_p2 = x_assign_3_fu_1050_p2 << 8'd1;

assign tmp_fu_558_p2 = ((i_reg_384 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_i2_cast_fu_1121_p1 = $unsigned(i_7_cast_fu_1118_p1);

assign tmp_i2_fu_777_p2 = ((ap_phi_mux_i_i1_phi_fu_445_p4 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_i3_cast_fu_792_p1 = $unsigned(i_8_cast_fu_789_p1);

assign tmp_i3_fu_1106_p2 = ((ap_phi_mux_i_i2_phi_fu_467_p4 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_i4_cast_fu_819_p1 = i_i3_reg_452;

assign tmp_i_20_fu_613_p1 = $unsigned(i_6_cast_fu_610_p1);

assign tmp_i_cast_fu_618_p1 = $unsigned(i_6_cast_fu_610_p1);

assign tmp_i_fu_587_p2 = ((ap_phi_mux_i_i_phi_fu_422_p4 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_570_p1 = i_reg_384;

assign x_assign_1_fu_960_p2 = (reg_511 ^ reg_504);

assign x_assign_2_fu_1005_p2 = (reg_518 ^ reg_511);

assign x_assign_3_fu_1050_p2 = (reg_518 ^ reg_498);

assign x_assign_fu_901_p2 = (reg_504 ^ reg_498);

always @ (posedge ap_clk) begin
    tmp_s_reg_1173[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_120_i_reg_1208[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    tmp_i_20_reg_1218[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //aes256_encrypt_ecb
