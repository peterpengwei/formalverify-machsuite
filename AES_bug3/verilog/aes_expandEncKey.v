// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes_expandEncKey (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        k_address0,
        k_ce0,
        k_we0,
        k_d0,
        k_q0,
        k_address1,
        k_ce1,
        k_we1,
        k_d1,
        k_q1,
        rc_read,
        ap_return
);

parameter    ap_ST_fsm_state1 = 25'd1;
parameter    ap_ST_fsm_state2 = 25'd2;
parameter    ap_ST_fsm_state3 = 25'd4;
parameter    ap_ST_fsm_state4 = 25'd8;
parameter    ap_ST_fsm_state5 = 25'd16;
parameter    ap_ST_fsm_state6 = 25'd32;
parameter    ap_ST_fsm_state7 = 25'd64;
parameter    ap_ST_fsm_state8 = 25'd128;
parameter    ap_ST_fsm_state9 = 25'd256;
parameter    ap_ST_fsm_state10 = 25'd512;
parameter    ap_ST_fsm_state11 = 25'd1024;
parameter    ap_ST_fsm_state12 = 25'd2048;
parameter    ap_ST_fsm_state13 = 25'd4096;
parameter    ap_ST_fsm_state14 = 25'd8192;
parameter    ap_ST_fsm_state15 = 25'd16384;
parameter    ap_ST_fsm_state16 = 25'd32768;
parameter    ap_ST_fsm_state17 = 25'd65536;
parameter    ap_ST_fsm_state18 = 25'd131072;
parameter    ap_ST_fsm_state19 = 25'd262144;
parameter    ap_ST_fsm_state20 = 25'd524288;
parameter    ap_ST_fsm_state21 = 25'd1048576;
parameter    ap_ST_fsm_state22 = 25'd2097152;
parameter    ap_ST_fsm_state23 = 25'd4194304;
parameter    ap_ST_fsm_state24 = 25'd8388608;
parameter    ap_ST_fsm_state25 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] k_address0;
output   k_ce0;
output   k_we0;
output  [7:0] k_d0;
input  [7:0] k_q0;
output  [4:0] k_address1;
output   k_ce1;
output   k_we1;
output  [7:0] k_d1;
input  [7:0] k_q1;
input  [7:0] rc_read;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] k_address0;
reg k_ce0;
reg k_we0;
reg[7:0] k_d0;
reg[4:0] k_address1;
reg k_ce1;
reg k_we1;
reg[7:0] k_d1;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] sbox_address0;
reg    sbox_ce0;
wire   [7:0] sbox_q0;
reg   [7:0] sbox_address1;
reg    sbox_ce1;
wire   [7:0] sbox_q1;
wire   [7:0] sbox_address2;
reg    sbox_ce2;
wire   [7:0] sbox_q2;
reg   [7:0] reg_515;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg   [7:0] reg_519;
wire    ap_CS_fsm_state3;
wire   [7:0] grp_fu_497_p2;
reg   [7:0] reg_524;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state23;
reg   [7:0] reg_530;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state21;
reg   [7:0] reg_535;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state22;
wire   [7:0] grp_fu_503_p2;
reg   [7:0] reg_540;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire   [7:0] grp_fu_509_p2;
reg   [7:0] reg_545;
wire   [4:0] k_addr_reg_856;
wire   [4:0] k_addr_3_reg_866;
reg   [7:0] k_load_6_reg_871;
wire   [7:0] tmp_22_fu_560_p2;
reg   [7:0] tmp_22_reg_881;
wire   [4:0] k_addr_5_reg_891;
wire   [4:0] k_addr_7_reg_901;
wire   [7:0] tmp_24_fu_588_p2;
reg   [7:0] tmp_24_reg_906;
wire    ap_CS_fsm_state5;
wire   [7:0] tmp_26_fu_594_p2;
reg   [7:0] tmp_26_reg_911;
wire   [7:0] tmp_29_fu_622_p2;
reg   [7:0] tmp_29_reg_916;
wire   [3:0] tmp_60_fu_636_p1;
reg   [3:0] tmp_60_reg_923;
wire    ap_CS_fsm_state7;
wire   [0:0] tmp_30_fu_628_p3;
reg   [4:0] k_addr_9_reg_938;
reg   [4:0] k_addr_11_reg_949;
reg   [4:0] k_addr_13_reg_959;
reg   [4:0] k_addr_15_reg_970;
wire   [4:0] i_2_fu_716_p2;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire   [4:0] k_addr_17_reg_1005;
wire   [4:0] k_addr_19_reg_1015;
wire   [4:0] k_addr_21_reg_1025;
wire   [4:0] k_addr_23_reg_1035;
wire   [4:0] tmp_81_fu_750_p1;
reg   [4:0] tmp_81_reg_1043;
wire    ap_CS_fsm_state19;
wire   [0:0] tmp_61_fu_742_p3;
reg   [4:0] k_addr_25_reg_1058;
reg   [4:0] k_addr_27_reg_1069;
reg   [4:0] k_addr_29_reg_1079;
reg   [4:0] k_addr_31_reg_1090;
wire   [5:0] i_3_fu_830_p2;
wire    ap_CS_fsm_state24;
reg   [4:0] i_reg_473;
wire    ap_CS_fsm_state6;
reg   [5:0] i_1_reg_485;
wire    ap_CS_fsm_state18;
wire   [63:0] tmp_21_fu_550_p1;
wire   [63:0] tmp_fu_555_p1;
wire   [63:0] tmp_23_fu_566_p1;
wire   [63:0] tmp_25_fu_571_p1;
wire   [63:0] tmp_34_fu_646_p1;
wire   [63:0] tmp_36_fu_651_p1;
wire   [63:0] tmp_39_fu_661_p1;
wire   [63:0] tmp_41_fu_671_p1;
wire   [63:0] tmp_44_fu_681_p1;
wire   [63:0] tmp_46_fu_691_p1;
wire   [63:0] tmp_49_fu_701_p1;
wire   [63:0] tmp_51_fu_711_p1;
wire   [63:0] tmp_31_fu_722_p1;
wire   [63:0] tmp_54_fu_727_p1;
wire   [63:0] tmp_56_fu_732_p1;
wire   [63:0] tmp_58_fu_737_p1;
wire   [63:0] tmp_63_fu_760_p1;
wire   [63:0] tmp_64_fu_765_p1;
wire   [63:0] tmp_67_fu_775_p1;
wire   [63:0] tmp_69_fu_785_p1;
wire   [63:0] tmp_72_fu_795_p1;
wire   [63:0] tmp_74_fu_805_p1;
wire   [63:0] tmp_77_fu_815_p1;
wire   [63:0] tmp_79_fu_825_p1;
wire   [7:0] tmp_s_fu_581_p2;
wire   [7:0] tmp1_fu_575_p2;
wire   [0:0] tmp_28_fu_606_p3;
wire   [7:0] tmp_43_cast_cast_fu_614_p3;
wire   [7:0] tmp_27_fu_600_p2;
wire   [3:0] tmp_33_fu_640_p2;
wire   [3:0] tmp_38_fu_656_p2;
wire   [3:0] tmp_40_fu_666_p2;
wire   [3:0] tmp_43_fu_676_p2;
wire   [3:0] tmp_45_fu_686_p2;
wire   [3:0] tmp_48_fu_696_p2;
wire   [3:0] tmp_50_fu_706_p2;
wire   [4:0] tmp_62_fu_754_p2;
wire   [4:0] tmp_66_fu_770_p2;
wire   [4:0] tmp_68_fu_780_p2;
wire   [4:0] tmp_71_fu_790_p2;
wire   [4:0] tmp_73_fu_800_p2;
wire   [4:0] tmp_76_fu_810_p2;
wire   [4:0] tmp_78_fu_820_p2;
wire    ap_CS_fsm_state25;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
end

aes_expandEncKey_bkb #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sbox_address0),
    .ce0(sbox_ce0),
    .q0(sbox_q0),
    .address1(sbox_address1),
    .ce1(sbox_ce1),
    .q1(sbox_q1),
    .address2(sbox_address2),
    .ce2(sbox_ce2),
    .q2(sbox_q2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        i_1_reg_485 <= i_3_fu_830_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        i_1_reg_485 <= 6'd20;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_473 <= i_2_fu_716_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_473 <= 5'd4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_519 <= k_q0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_519 <= k_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        k_addr_11_reg_949[3 : 1] <= tmp_41_fu_671_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        k_addr_13_reg_959[0] <= tmp_46_fu_691_p1[0];
k_addr_13_reg_959[3 : 2] <= tmp_46_fu_691_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        k_addr_15_reg_970[3 : 2] <= tmp_51_fu_711_p1[3 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_61_fu_742_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
        k_addr_25_reg_1058 <= tmp_64_fu_765_p1;
        tmp_81_reg_1043 <= tmp_81_fu_750_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        k_addr_27_reg_1069[4 : 1] <= tmp_69_fu_785_p1[4 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        k_addr_29_reg_1079[0] <= tmp_74_fu_805_p1[0];
k_addr_29_reg_1079[4 : 2] <= tmp_74_fu_805_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        k_addr_31_reg_1090[4 : 2] <= tmp_79_fu_825_p1[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_30_fu_628_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        k_addr_9_reg_938 <= tmp_36_fu_651_p1;
        tmp_60_reg_923 <= tmp_60_fu_636_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        k_load_6_reg_871 <= k_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        reg_515 <= k_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_524 <= grp_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_530 <= grp_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10))) begin
        reg_535 <= grp_fu_497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16))) begin
        reg_540 <= grp_fu_503_p2;
        reg_545 <= grp_fu_509_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_22_reg_881 <= tmp_22_fu_560_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        tmp_24_reg_906 <= tmp_24_fu_588_p2;
        tmp_26_reg_911 <= tmp_26_fu_594_p2;
        tmp_29_reg_916 <= tmp_29_fu_622_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state25) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        k_address0 = k_addr_29_reg_1079;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        k_address0 = k_addr_25_reg_1058;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_address0 = tmp_77_fu_815_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_address0 = tmp_72_fu_795_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_address0 = tmp_67_fu_775_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        k_address0 = tmp_63_fu_760_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        k_address0 = k_addr_21_reg_1025;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_address0 = k_addr_17_reg_1005;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        k_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        k_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        k_address0 = k_addr_13_reg_959;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_address0 = k_addr_9_reg_938;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_address0 = tmp_49_fu_701_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        k_address0 = tmp_44_fu_681_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_address0 = tmp_39_fu_661_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        k_address0 = tmp_34_fu_646_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        k_address0 = k_addr_5_reg_891;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        k_address0 = k_addr_reg_856;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        k_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        k_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        k_address0 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        k_address0 = 64'd29;
    end else begin
        k_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        k_address1 = k_addr_31_reg_1090;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        k_address1 = k_addr_27_reg_1069;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        k_address1 = tmp_79_fu_825_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        k_address1 = tmp_74_fu_805_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        k_address1 = tmp_69_fu_785_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        k_address1 = tmp_64_fu_765_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        k_address1 = k_addr_23_reg_1035;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        k_address1 = k_addr_19_reg_1015;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        k_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        k_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        k_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        k_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        k_address1 = k_addr_15_reg_970;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        k_address1 = k_addr_11_reg_949;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        k_address1 = tmp_51_fu_711_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        k_address1 = tmp_46_fu_691_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        k_address1 = tmp_41_fu_671_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        k_address1 = tmp_36_fu_651_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        k_address1 = k_addr_7_reg_901;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        k_address1 = k_addr_3_reg_866;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        k_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        k_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        k_address1 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        k_address1 = 64'd30;
    end else begin
        k_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_ce0 = 1'b1;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        k_ce1 = 1'b1;
    end else begin
        k_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        k_d0 = reg_540;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12))) begin
        k_d0 = reg_535;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state11))) begin
        k_d0 = reg_524;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        k_d0 = tmp_24_reg_906;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        k_d0 = tmp_s_fu_581_p2;
    end else begin
        k_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        k_d1 = reg_545;
    end else if (((1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12))) begin
        k_d1 = reg_524;
    end else if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state11))) begin
        k_d1 = reg_530;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        k_d1 = tmp_26_reg_911;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        k_d1 = tmp_22_reg_881;
    end else begin
        k_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state11))) begin
        k_we0 = 1'b1;
    end else begin
        k_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state11))) begin
        k_we1 = 1'b1;
    end else begin
        k_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sbox_address0 = tmp_56_fu_732_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sbox_address0 = tmp_31_fu_722_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sbox_address0 = tmp_fu_555_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        sbox_address0 = tmp_21_fu_550_p1;
    end else begin
        sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        sbox_address1 = tmp_58_fu_737_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sbox_address1 = tmp_54_fu_727_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        sbox_address1 = tmp_23_fu_566_p1;
    end else begin
        sbox_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state3))) begin
        sbox_ce0 = 1'b1;
    end else begin
        sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16))) begin
        sbox_ce1 = 1'b1;
    end else begin
        sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sbox_ce2 = 1'b1;
    end else begin
        sbox_ce2 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((tmp_30_fu_628_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((tmp_61_fu_742_p3 == 1'd0) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = tmp_29_reg_916;

assign grp_fu_497_p2 = (k_q1 ^ k_q0);

assign grp_fu_503_p2 = (sbox_q0 ^ k_q0);

assign grp_fu_509_p2 = (sbox_q1 ^ k_q1);

assign i_2_fu_716_p2 = (5'd4 + i_reg_473);

assign i_3_fu_830_p2 = (6'd4 + i_1_reg_485);

assign k_addr_17_reg_1005 = 64'd16;

assign k_addr_19_reg_1015 = 64'd17;

assign k_addr_21_reg_1025 = 64'd18;

assign k_addr_23_reg_1035 = 64'd19;

assign k_addr_3_reg_866 = 64'd1;

assign k_addr_5_reg_891 = 64'd2;

assign k_addr_7_reg_901 = 64'd3;

assign k_addr_reg_856 = 64'd0;

assign sbox_address2 = tmp_25_fu_571_p1;

assign tmp1_fu_575_p2 = (reg_515 ^ rc_read);

assign tmp_21_fu_550_p1 = reg_519;

assign tmp_22_fu_560_p2 = (sbox_q0 ^ k_q1);

assign tmp_23_fu_566_p1 = reg_519;

assign tmp_24_fu_588_p2 = (sbox_q1 ^ k_q0);

assign tmp_25_fu_571_p1 = k_load_6_reg_871;

assign tmp_26_fu_594_p2 = (sbox_q2 ^ k_q1);

assign tmp_27_fu_600_p2 = rc_read << 8'd1;

assign tmp_28_fu_606_p3 = rc_read[32'd7];

assign tmp_29_fu_622_p2 = (tmp_43_cast_cast_fu_614_p3 ^ tmp_27_fu_600_p2);

assign tmp_30_fu_628_p3 = i_reg_473[32'd4];

assign tmp_31_fu_722_p1 = reg_515;

assign tmp_33_fu_640_p2 = ($signed(4'd12) + $signed(tmp_60_fu_636_p1));

assign tmp_34_fu_646_p1 = tmp_33_fu_640_p2;

assign tmp_36_fu_651_p1 = i_reg_473;

assign tmp_38_fu_656_p2 = ($signed(4'd13) + $signed(tmp_60_reg_923));

assign tmp_39_fu_661_p1 = tmp_38_fu_656_p2;

assign tmp_40_fu_666_p2 = (tmp_60_reg_923 | 4'd1);

assign tmp_41_fu_671_p1 = tmp_40_fu_666_p2;

assign tmp_43_cast_cast_fu_614_p3 = ((tmp_28_fu_606_p3[0:0] === 1'b1) ? 8'd27 : 8'd0);

assign tmp_43_fu_676_p2 = ($signed(4'd14) + $signed(tmp_60_reg_923));

assign tmp_44_fu_681_p1 = tmp_43_fu_676_p2;

assign tmp_45_fu_686_p2 = (tmp_60_reg_923 | 4'd2);

assign tmp_46_fu_691_p1 = tmp_45_fu_686_p2;

assign tmp_48_fu_696_p2 = ($signed(4'd15) + $signed(tmp_60_reg_923));

assign tmp_49_fu_701_p1 = tmp_48_fu_696_p2;

assign tmp_50_fu_706_p2 = (tmp_60_reg_923 | 4'd3);

assign tmp_51_fu_711_p1 = tmp_50_fu_706_p2;

assign tmp_54_fu_727_p1 = reg_519;

assign tmp_56_fu_732_p1 = reg_515;

assign tmp_58_fu_737_p1 = reg_519;

assign tmp_60_fu_636_p1 = i_reg_473[3:0];

assign tmp_61_fu_742_p3 = i_1_reg_485[32'd5];

assign tmp_62_fu_754_p2 = ($signed(5'd28) + $signed(tmp_81_fu_750_p1));

assign tmp_63_fu_760_p1 = tmp_62_fu_754_p2;

assign tmp_64_fu_765_p1 = i_1_reg_485;

assign tmp_66_fu_770_p2 = ($signed(5'd29) + $signed(tmp_81_reg_1043));

assign tmp_67_fu_775_p1 = tmp_66_fu_770_p2;

assign tmp_68_fu_780_p2 = (tmp_81_reg_1043 | 5'd1);

assign tmp_69_fu_785_p1 = tmp_68_fu_780_p2;

assign tmp_71_fu_790_p2 = ($signed(5'd30) + $signed(tmp_81_reg_1043));

assign tmp_72_fu_795_p1 = tmp_71_fu_790_p2;

assign tmp_73_fu_800_p2 = (tmp_81_reg_1043 | 5'd2);

assign tmp_74_fu_805_p1 = tmp_73_fu_800_p2;

assign tmp_76_fu_810_p2 = ($signed(5'd31) + $signed(tmp_81_reg_1043));

assign tmp_77_fu_815_p1 = tmp_76_fu_810_p2;

assign tmp_78_fu_820_p2 = (tmp_81_reg_1043 | 5'd3);

assign tmp_79_fu_825_p1 = tmp_78_fu_820_p2;

assign tmp_81_fu_750_p1 = i_1_reg_485[4:0];

assign tmp_fu_555_p1 = reg_515;

assign tmp_s_fu_581_p2 = (tmp1_fu_575_p2 ^ sbox_q0);

always @ (posedge ap_clk) begin
    k_addr_11_reg_949[0] <= 1'b1;
    k_addr_11_reg_949[4] <= 1'b0;
    k_addr_13_reg_959[1] <= 1'b1;
    k_addr_13_reg_959[4] <= 1'b0;
    k_addr_15_reg_970[1:0] <= 2'b11;
    k_addr_15_reg_970[4] <= 1'b0;
    k_addr_27_reg_1069[0] <= 1'b1;
    k_addr_29_reg_1079[1] <= 1'b1;
    k_addr_31_reg_1090[1:0] <= 2'b11;
end

endmodule //aes_expandEncKey
