// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes256_encrypt_ecb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        k_address0,
        k_ce0,
        k_q0,
        buf_r_address0,
        buf_r_ce0,
        buf_r_we0,
        buf_r_d0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf_r_q1,
        sum
);


input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] k_address0;
output   k_ce0;
input  [7:0] k_q0;
output  [11:0] buf_r_address0;
output   buf_r_ce0;
output   buf_r_we0;
output  [7:0] buf_r_d0;
input  [7:0] buf_r_q0;
output  [11:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [7:0] buf_r_d1;
input  [7:0] buf_r_q1;
input  [12:0] sum;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg k_ce0;
reg[11:0] buf_r_address0;
reg buf_r_ce0;
reg buf_r_we0;
reg[7:0] buf_r_d0;
reg[11:0] buf_r_address1;
reg buf_r_ce1;
reg buf_r_we1;
reg[7:0] buf_r_d1;

(* fsm_encoding = "none" *) reg   [62:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [7:0] sbox_address0;
reg    sbox_ce0;
wire   [7:0] sbox_q0;
wire   [7:0] sbox_q1;
reg   [5:0] i_reg_385;
reg   [4:0] i_i_reg_419;
reg   [4:0] i_i1_reg_442;
reg   [4:0] i_i2_reg_464;
reg   [7:0] reg_499;
wire   [0:0] ap_CS_fsm_pp1_stage2;
reg    ap_enable_reg_pp1_iter0;
reg   [0:0] tmp_i_reg_1208;
wire   [0:0] ap_CS_fsm_pp2_stage2;
reg    ap_enable_reg_pp2_iter0;
reg   [0:0] tmp_i2_reg_1341;
wire   [0:0] ap_CS_fsm_state21;
wire   [0:0] ap_CS_fsm_state33;
wire   [0:0] ap_CS_fsm_pp3_stage2;
reg    ap_enable_reg_pp3_iter0;
reg   [0:0] tmp_i1_reg_1430;
wire   [0:0] ap_CS_fsm_state56;
reg   [7:0] reg_505;
wire   [0:0] ap_CS_fsm_pp2_stage4;
wire   [0:0] ap_CS_fsm_pp3_stage4;
reg   [7:0] reg_511;
wire   [0:0] ap_CS_fsm_state26;
wire   [0:0] ap_CS_fsm_state61;
reg   [7:0] reg_518;
wire   [0:0] ap_CS_fsm_state22;
wire   [0:0] ap_CS_fsm_state34;
wire   [0:0] ap_CS_fsm_state57;
reg   [7:0] reg_525;
reg   [7:0] reg_530;
wire   [0:0] ap_CS_fsm_state23;
wire   [0:0] ap_CS_fsm_state58;
reg   [7:0] reg_535;
reg   [7:0] reg_540;
wire   [0:0] ap_CS_fsm_state24;
wire   [0:0] ap_CS_fsm_state59;
reg   [7:0] reg_545;
reg   [7:0] reg_550;
wire   [0:0] ap_CS_fsm_state25;
wire   [0:0] ap_CS_fsm_state60;
reg   [7:0] reg_555;
reg   [7:0] reg_560;
wire   [0:0] ap_CS_fsm_state32;
wire   [0:0] tmp_74_fu_816_p3;
reg   [0:0] tmp_73_reg_1337;
wire   [0:0] ap_CS_fsm_state65;
wire   [0:0] tmp_fu_565_p2;
reg   [0:0] tmp_reg_1168;
wire   [0:0] ap_CS_fsm_pp0_stage0;
reg   [0:0] ap_pipeline_reg_pp0_iter1_tmp_reg_1168;
wire   [5:0] i_5_fu_571_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] tmp_s_fu_577_p1;
reg   [63:0] tmp_s_reg_1177;
reg   [63:0] ap_pipeline_reg_pp0_iter1_tmp_s_reg_1177;
reg   [7:0] k_load_reg_1188;
wire   [0:0] tmp_68_fu_582_p2;
wire   [0:0] ap_CS_fsm_state6;
wire   [2:0] phitmp_fu_588_p2;
reg   [2:0] phitmp_reg_1198;
wire   [7:0] grp_aes_expandEncKey_fu_475_ap_return;
wire   [0:0] ap_CS_fsm_state7;
wire    grp_aes_expandEncKey_fu_475_ap_done;
wire   [0:0] tmp_i_fu_594_p2;
wire   [0:0] ap_CS_fsm_pp1_stage0;
wire   [4:0] i_6_fu_600_p2;
reg   [4:0] i_6_reg_1212;
wire   [4:0] tmp_90_i_fu_606_p2;
reg   [4:0] tmp_90_i_reg_1218;
wire   [63:0] tmp_i_18_fu_615_p1;
reg   [63:0] tmp_i_18_reg_1223;
wire   [0:0] ap_CS_fsm_pp1_stage1;
reg   [11:0] buf_addr_12_reg_1233;
wire   [63:0] tmp_91_i_fu_634_p1;
reg   [63:0] tmp_91_i_reg_1238;
wire   [7:0] ctx_body_enckey_q0;
reg   [7:0] ctx_enckey_load_reg_1248;
wire   [7:0] ctx_body_enckey_q1;
reg   [7:0] ctx_enckey_load_1_reg_1254;
reg   [11:0] buf_addr_reg_1266;
wire   [0:0] ap_CS_fsm_state12;
reg   [11:0] buf_addr_1_reg_1272;
reg   [11:0] buf_addr_2_reg_1278;
reg   [11:0] buf_addr_3_reg_1283;
reg   [11:0] buf_addr_4_reg_1288;
reg   [11:0] buf_addr_5_reg_1293;
reg   [11:0] buf_addr_6_reg_1298;
reg   [11:0] buf_addr_7_reg_1303;
reg   [11:0] buf_addr_8_reg_1308;
reg   [11:0] buf_addr_9_reg_1313;
reg   [11:0] buf_addr_10_reg_1318;
reg   [11:0] buf_addr_11_reg_1323;
wire   [11:0] tmp_72_fu_764_p1;
reg   [11:0] tmp_72_reg_1328;
wire   [0:0] exitcond_fu_772_p2;
wire   [0:0] ap_CS_fsm_state13;
wire   [0:0] tmp_73_fu_778_p1;
wire   [0:0] tmp_i2_fu_782_p2;
wire   [0:0] ap_CS_fsm_pp2_stage0;
wire   [4:0] i_8_fu_788_p2;
reg   [4:0] i_8_reg_1345;
reg   [11:0] buf_addr_14_reg_1351;
wire   [0:0] ap_CS_fsm_pp2_stage1;
wire   [0:0] ap_CS_fsm_pp2_stage3;
reg   [11:0] buf_addr_15_reg_1364;
wire   [3:0] tmp_75_fu_838_p1;
reg   [3:0] tmp_75_reg_1369;
reg   [11:0] buf_addr_16_reg_1375;
wire   [4:0] i_14_fu_862_p2;
reg   [4:0] i_14_reg_1381;
reg   [11:0] buf_addr_17_reg_1386;
reg   [11:0] buf_addr_18_reg_1392;
wire   [7:0] e_fu_918_p2;
reg   [7:0] e_reg_1398;
wire   [7:0] tmp_15_i_fu_958_p2;
reg   [7:0] tmp_15_i_reg_1405;
wire   [7:0] tmp_19_i_fu_1003_p2;
reg   [7:0] tmp_19_i_reg_1410;
wire   [0:0] ap_CS_fsm_state37;
wire   [7:0] tmp_23_i_fu_1048_p2;
reg   [7:0] tmp_23_i_reg_1415;
wire   [0:0] ap_CS_fsm_state40;
wire   [7:0] tmp_27_i_fu_1093_p2;
reg   [7:0] tmp_27_i_reg_1420;
wire   [0:0] ap_CS_fsm_state43;
wire   [3:0] i_9_fu_1104_p2;
wire   [0:0] ap_CS_fsm_state47;
wire    grp_aes_addRoundKey_fu_484_ap_done;
reg    ap_block_state47_subcall_not_done;
wire   [0:0] tmp_i1_fu_1110_p2;
wire   [0:0] ap_CS_fsm_pp3_stage0;
wire   [4:0] i_7_fu_1116_p2;
reg   [4:0] i_7_reg_1434;
reg   [11:0] buf_addr_13_reg_1440;
wire   [0:0] ap_CS_fsm_pp3_stage1;
wire   [0:0] ap_CS_fsm_pp3_stage3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp3_iter1;
reg   [4:0] ctx_body_key_address0;
reg    ctx_body_key_ce0;
reg    ctx_body_key_we0;
reg   [7:0] ctx_body_key_d0;
wire   [7:0] ctx_body_key_q0;
reg   [4:0] ctx_body_key_address1;
reg    ctx_body_key_ce1;
reg    ctx_body_key_we1;
reg   [7:0] ctx_body_key_d1;
wire   [7:0] ctx_body_key_q1;
reg   [4:0] ctx_body_enckey_address0;
reg    ctx_body_enckey_ce0;
reg    ctx_body_enckey_we0;
wire   [4:0] ctx_body_enckey_address1;
reg    ctx_body_enckey_ce1;
reg   [4:0] ctx_body_deckey_address0;
reg    ctx_body_deckey_ce0;
reg    ctx_body_deckey_we0;
reg   [7:0] ctx_body_deckey_d0;
wire   [7:0] ctx_body_deckey_q0;
reg    ctx_body_deckey_ce1;
reg    ctx_body_deckey_we1;
wire   [7:0] ctx_body_deckey_q1;
wire    grp_aes_expandEncKey_fu_475_ap_start;
wire    grp_aes_expandEncKey_fu_475_ap_idle;
wire    grp_aes_expandEncKey_fu_475_ap_ready;
wire   [4:0] grp_aes_expandEncKey_fu_475_k_address0;
wire    grp_aes_expandEncKey_fu_475_k_ce0;
wire    grp_aes_expandEncKey_fu_475_k_we0;
wire   [7:0] grp_aes_expandEncKey_fu_475_k_d0;
reg   [7:0] grp_aes_expandEncKey_fu_475_k_q0;
wire   [4:0] grp_aes_expandEncKey_fu_475_k_address1;
wire    grp_aes_expandEncKey_fu_475_k_ce1;
wire    grp_aes_expandEncKey_fu_475_k_we1;
wire   [7:0] grp_aes_expandEncKey_fu_475_k_d1;
reg   [7:0] grp_aes_expandEncKey_fu_475_k_q1;
reg   [7:0] grp_aes_expandEncKey_fu_475_rc_read;
wire    grp_aes_addRoundKey_fu_484_ap_start;
wire    grp_aes_addRoundKey_fu_484_ap_idle;
wire    grp_aes_addRoundKey_fu_484_ap_ready;
wire   [11:0] grp_aes_addRoundKey_fu_484_buf_r_address0;
wire    grp_aes_addRoundKey_fu_484_buf_r_ce0;
wire    grp_aes_addRoundKey_fu_484_buf_r_we0;
wire   [7:0] grp_aes_addRoundKey_fu_484_buf_r_d0;
wire   [4:0] grp_aes_addRoundKey_fu_484_key_address0;
wire    grp_aes_addRoundKey_fu_484_key_ce0;
reg   [5:0] grp_aes_addRoundKey_fu_484_key_offset;
reg   [7:0] rcon_reg_396;
wire   [0:0] ap_CS_fsm_state5;
reg   [2:0] i_1_reg_408;
reg   [4:0] i_i_phi_fu_423_p4;
reg   [3:0] i_2_reg_430;
reg   [4:0] i_i1_phi_fu_446_p4;
reg   [4:0] i_i3_reg_453;
wire   [0:0] ap_CS_fsm_state31;
wire   [0:0] ap_CS_fsm_state44;
reg   [4:0] i_i2_phi_fu_468_p4;
reg    ap_reg_grp_aes_expandEncKey_fu_475_ap_start;
wire   [0:0] ap_CS_fsm_state45;
wire   [0:0] ap_CS_fsm_state66;
reg    ap_reg_grp_aes_addRoundKey_fu_484_ap_start;
wire   [0:0] ap_CS_fsm_state46;
wire   [0:0] ap_CS_fsm_state67;
wire   [0:0] ap_CS_fsm_state48;
wire   [0:0] ap_CS_fsm_state68;
wire   [63:0] sum1_i_cast_fu_629_p1;
wire   [63:0] sum1_i8_cast_fu_649_p1;
wire   [63:0] sum3_i_cast_fu_659_p1;
wire   [63:0] sum5_i_cast_fu_669_p1;
wire   [63:0] sum7_i_cast_fu_679_p1;
wire   [63:0] sum9_i_cast_fu_689_p1;
wire   [63:0] sum2_i_cast_fu_699_p1;
wire   [63:0] sum4_i_cast_fu_709_p1;
wire   [63:0] sum6_i_cast_fu_719_p1;
wire   [63:0] sum8_i_cast_fu_729_p1;
wire   [63:0] sum10_i_cast_fu_739_p1;
wire   [63:0] sum11_i_cast_fu_749_p1;
wire   [63:0] sum12_i_cast_fu_759_p1;
wire   [63:0] sum1_i4_cast_fu_806_p1;
wire   [63:0] tmp_3_i_fu_811_p1;
wire   [63:0] sum1_i3_cast_fu_833_p1;
wire   [63:0] sum3_i2_cast_fu_857_p1;
wire   [63:0] sum5_i2_cast_fu_882_p1;
wire   [63:0] sum7_i2_cast_fu_901_p1;
wire   [63:0] sum1_i2_cast_fu_1134_p1;
wire   [63:0] tmp_3_i1_fu_1139_p1;
reg   [7:0] rcon_1_fu_136;
wire   [7:0] tmp_88_i_fu_638_p2;
wire   [0:0] ap_CS_fsm_state20;
wire   [0:0] ap_CS_fsm_state27;
wire   [0:0] ap_CS_fsm_state28;
wire   [0:0] ap_CS_fsm_state29;
wire   [0:0] ap_CS_fsm_state30;
wire   [0:0] ap_CS_fsm_state35;
wire   [0:0] ap_CS_fsm_state36;
wire   [0:0] ap_CS_fsm_state38;
wire   [0:0] ap_CS_fsm_state39;
wire   [0:0] ap_CS_fsm_state41;
wire   [0:0] ap_CS_fsm_state42;
wire   [0:0] ap_CS_fsm_state55;
wire   [0:0] ap_CS_fsm_state62;
wire   [0:0] ap_CS_fsm_state63;
wire   [0:0] ap_CS_fsm_state64;
wire  signed [7:0] i_6_cast_fu_612_p1;
wire   [12:0] tmp_i_cast_fu_620_p1;
wire   [12:0] sum1_i_fu_624_p2;
wire   [12:0] sum1_i8_fu_644_p2;
wire   [12:0] sum3_i_fu_654_p2;
wire   [12:0] sum5_i_fu_664_p2;
wire   [12:0] sum7_i_fu_674_p2;
wire   [12:0] sum9_i_fu_684_p2;
wire   [12:0] sum2_i_fu_694_p2;
wire   [12:0] sum4_i_fu_704_p2;
wire   [12:0] sum6_i_fu_714_p2;
wire   [12:0] sum8_i_fu_724_p2;
wire   [12:0] sum10_i_fu_734_p2;
wire   [12:0] sum11_i_fu_744_p2;
wire   [12:0] sum12_i_fu_754_p2;
wire  signed [7:0] i_8_cast_fu_794_p1;
wire   [12:0] tmp_i3_cast_fu_797_p1;
wire   [12:0] sum1_i4_fu_801_p2;
wire   [12:0] tmp_i2_cast_fu_824_p1;
wire   [12:0] sum1_i3_fu_828_p2;
wire   [3:0] tmp_5_i_fu_842_p2;
wire   [12:0] tmp_6_i_cast_fu_848_p1;
wire   [12:0] sum3_i2_fu_852_p2;
wire   [3:0] tmp_7_i2_fu_868_p2;
wire   [12:0] tmp_8_i_cast_fu_873_p1;
wire   [12:0] sum5_i2_fu_877_p2;
wire   [3:0] tmp_9_i_fu_887_p2;
wire   [12:0] tmp_10_i_cast_fu_892_p1;
wire   [12:0] sum7_i2_fu_896_p2;
wire   [7:0] x_assign_fu_906_p2;
wire   [7:0] tmp1_fu_912_p2;
wire   [7:0] tmp_77_fu_932_p2;
wire   [0:0] tmp_76_fu_924_p3;
wire   [7:0] tmp_1_i_i_fu_938_p2;
wire   [7:0] tmp_2_i_i_fu_944_p3;
wire   [7:0] tmp2_fu_952_p2;
wire   [7:0] x_assign_1_fu_964_p2;
wire   [7:0] tmp_79_fu_978_p2;
wire   [0:0] tmp_78_fu_970_p3;
wire   [7:0] tmp_1_i3_i_fu_984_p2;
wire   [7:0] tmp_2_i4_i_fu_990_p3;
wire   [7:0] tmp3_fu_998_p2;
wire   [7:0] x_assign_2_fu_1009_p2;
wire   [7:0] tmp_81_fu_1023_p2;
wire   [0:0] tmp_80_fu_1015_p3;
wire   [7:0] tmp_1_i7_i_fu_1029_p2;
wire   [7:0] tmp_2_i8_i_fu_1035_p3;
wire   [7:0] tmp4_fu_1043_p2;
wire   [7:0] x_assign_3_fu_1054_p2;
wire   [7:0] tmp_83_fu_1068_p2;
wire   [0:0] tmp_82_fu_1060_p3;
wire   [7:0] tmp_1_i11_i_fu_1074_p2;
wire   [7:0] tmp_2_i12_i_fu_1080_p3;
wire   [7:0] tmp5_fu_1088_p2;
wire  signed [7:0] i_7_cast_fu_1122_p1;
wire   [12:0] tmp_i1_cast_fu_1125_p1;
wire   [12:0] sum1_i2_fu_1129_p2;
reg   [62:0] ap_NS_fsm;
reg    ap_enable_pp0;
reg    ap_enable_pp1;
reg    ap_enable_pp2;
reg    ap_enable_pp3;

// power-on initialization
initial begin
#0 ap_CS_fsm = 63'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp3_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp3_iter1 = 1'b0;
#0 ap_reg_grp_aes_expandEncKey_fu_475_ap_start = 1'b0;
#0 ap_reg_grp_aes_addRoundKey_fu_484_ap_start = 1'b0;
end

aes_expandEncKey_sbox #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sbox_address0),
    .ce0(sbox_ce0),
    .q0(sbox_q0),
    .address1(8'd0),
    .ce1(1'b0),
    .q1(sbox_q1)
);

aes256_encrypt_ecb_ctx_body_key #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ctx_body_key_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_body_key_address0),
    .ce0(ctx_body_key_ce0),
    .we0(ctx_body_key_we0),
    .d0(ctx_body_key_d0),
    .q0(ctx_body_key_q0),
    .address1(ctx_body_key_address1),
    .ce1(ctx_body_key_ce1),
    .we1(ctx_body_key_we1),
    .d1(ctx_body_key_d1),
    .q1(ctx_body_key_q1)
);

aes256_encrypt_ecb_ctx_body_enckey #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ctx_body_enckey_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_body_enckey_address0),
    .ce0(ctx_body_enckey_ce0),
    .we0(ctx_body_enckey_we0),
    .d0(k_load_reg_1188),
    .q0(ctx_body_enckey_q0),
    .address1(ctx_body_enckey_address1),
    .ce1(ctx_body_enckey_ce1),
    .q1(ctx_body_enckey_q1)
);

aes256_encrypt_ecb_ctx_body_key #(
    .DataWidth( 8 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
ctx_body_deckey_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(ctx_body_deckey_address0),
    .ce0(ctx_body_deckey_ce0),
    .we0(ctx_body_deckey_we0),
    .d0(ctx_body_deckey_d0),
    .q0(ctx_body_deckey_q0),
    .address1(grp_aes_expandEncKey_fu_475_k_address1),
    .ce1(ctx_body_deckey_ce1),
    .we1(ctx_body_deckey_we1),
    .d1(grp_aes_expandEncKey_fu_475_k_d1),
    .q1(ctx_body_deckey_q1)
);

aes_expandEncKey grp_aes_expandEncKey_fu_475(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_expandEncKey_fu_475_ap_start),
    .ap_done(grp_aes_expandEncKey_fu_475_ap_done),
    .ap_idle(grp_aes_expandEncKey_fu_475_ap_idle),
    .ap_ready(grp_aes_expandEncKey_fu_475_ap_ready),
    .k_address0(grp_aes_expandEncKey_fu_475_k_address0),
    .k_ce0(grp_aes_expandEncKey_fu_475_k_ce0),
    .k_we0(grp_aes_expandEncKey_fu_475_k_we0),
    .k_d0(grp_aes_expandEncKey_fu_475_k_d0),
    .k_q0(grp_aes_expandEncKey_fu_475_k_q0),
    .k_address1(grp_aes_expandEncKey_fu_475_k_address1),
    .k_ce1(grp_aes_expandEncKey_fu_475_k_ce1),
    .k_we1(grp_aes_expandEncKey_fu_475_k_we1),
    .k_d1(grp_aes_expandEncKey_fu_475_k_d1),
    .k_q1(grp_aes_expandEncKey_fu_475_k_q1),
    .rc_read(grp_aes_expandEncKey_fu_475_rc_read),
    .ap_return(grp_aes_expandEncKey_fu_475_ap_return)
);

aes_addRoundKey grp_aes_addRoundKey_fu_484(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_addRoundKey_fu_484_ap_start),
    .ap_done(grp_aes_addRoundKey_fu_484_ap_done),
    .ap_idle(grp_aes_addRoundKey_fu_484_ap_idle),
    .ap_ready(grp_aes_addRoundKey_fu_484_ap_ready),
    .buf_r_address0(grp_aes_addRoundKey_fu_484_buf_r_address0),
    .buf_r_ce0(grp_aes_addRoundKey_fu_484_buf_r_ce0),
    .buf_r_we0(grp_aes_addRoundKey_fu_484_buf_r_we0),
    .buf_r_d0(grp_aes_addRoundKey_fu_484_buf_r_d0),
    .buf_r_q0(buf_r_q0),
    .sum(tmp_72_reg_1328),
    .key_address0(grp_aes_addRoundKey_fu_484_key_address0),
    .key_ce0(grp_aes_addRoundKey_fu_484_key_ce0),
    .key_q0(ctx_body_key_q0),
    .key_offset(grp_aes_addRoundKey_fu_484_key_offset)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= 63'd1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'd1 == ap_CS_fsm_pp0_stage0) & ~(1'd0 == tmp_fu_565_p2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_CS_fsm_state1 == 1'd1) & ~(1'b0 == ap_start))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'd1 == ap_CS_fsm_pp0_stage0) & (1'd0 == tmp_fu_565_p2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end else if ((((ap_CS_fsm_state1 == 1'd1) & ~(1'b0 == ap_start)) | ((1'd1 == ap_CS_fsm_pp0_stage0) & ~(1'd0 == tmp_fu_565_p2)))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'd1 == ap_CS_fsm_pp1_stage0) & ~(1'd0 == tmp_i_fu_594_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'd1 == ap_CS_fsm_state6) & ~(1'd0 == tmp_68_fu_582_p2))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'd1 == ap_CS_fsm_pp1_stage2) & (tmp_i_reg_1208 == 1'd0))) begin
            ap_enable_reg_pp1_iter1 <= 1'b1;
        end else if ((((1'd1 == ap_CS_fsm_state6) & ~(1'd0 == tmp_68_fu_582_p2)) | ((1'd1 == ap_CS_fsm_pp1_stage2) & ~(tmp_i_reg_1208 == 1'd0)))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'd1 == ap_CS_fsm_pp2_stage0) & ~(1'd0 == tmp_i2_fu_782_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'd1 == ap_CS_fsm_state13) & (1'd0 == exitcond_fu_772_p2))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'd0 == tmp_i2_reg_1341) & (1'd1 == ap_CS_fsm_pp2_stage4))) begin
            ap_enable_reg_pp2_iter1 <= 1'b1;
        end else if ((((1'd1 == ap_CS_fsm_state13) & (1'd0 == exitcond_fu_772_p2)) | ((1'd1 == ap_CS_fsm_pp2_stage4) & ~(1'd0 == tmp_i2_reg_1341)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter0 <= 1'b0;
    end else begin
        if (((1'd1 == ap_CS_fsm_pp3_stage0) & ~(1'd0 == tmp_i1_fu_1110_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b0;
        end else if (((1'd1 == ap_CS_fsm_state13) & ~(1'd0 == exitcond_fu_772_p2))) begin
            ap_enable_reg_pp3_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp3_iter1 <= 1'b0;
    end else begin
        if (((1'd0 == tmp_i1_reg_1430) & (1'd1 == ap_CS_fsm_pp3_stage4))) begin
            ap_enable_reg_pp3_iter1 <= 1'b1;
        end else if ((((1'd1 == ap_CS_fsm_state13) & ~(1'd0 == exitcond_fu_772_p2)) | ((1'd1 == ap_CS_fsm_pp3_stage4) & ~(1'd0 == tmp_i1_reg_1430)))) begin
            ap_enable_reg_pp3_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_aes_addRoundKey_fu_484_ap_start <= 1'b0;
    end else begin
        if ((((1'd1 == ap_CS_fsm_state32) & ~(1'd0 == tmp_74_fu_816_p3) & ~(1'd0 == tmp_73_reg_1337)) | (1'd1 == ap_CS_fsm_state46) | (1'd1 == ap_CS_fsm_state67))) begin
            ap_reg_grp_aes_addRoundKey_fu_484_ap_start <= 1'b1;
        end else if ((1'b1 == grp_aes_addRoundKey_fu_484_ap_ready)) begin
            ap_reg_grp_aes_addRoundKey_fu_484_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_grp_aes_expandEncKey_fu_475_ap_start <= 1'b0;
    end else begin
        if ((((1'd1 == ap_CS_fsm_state32) & ~(1'd0 == tmp_74_fu_816_p3) & (1'd0 == tmp_73_reg_1337)) | (1'd1 == ap_CS_fsm_state65) | ((1'd1 == ap_CS_fsm_state6) & (1'd0 == tmp_68_fu_582_p2)))) begin
            ap_reg_grp_aes_expandEncKey_fu_475_ap_start <= 1'b1;
        end else if ((1'b1 == grp_aes_expandEncKey_fu_475_ap_ready)) begin
            ap_reg_grp_aes_expandEncKey_fu_475_ap_start <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state5)) begin
        i_1_reg_408 <= 3'd7;
    end else if (((1'd1 == ap_CS_fsm_state7) & ~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done))) begin
        i_1_reg_408 <= phitmp_reg_1198;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state12)) begin
        i_2_reg_430 <= 4'd1;
    end else if (((1'd1 == ap_CS_fsm_state47) & ~(1'b1 == ap_block_state47_subcall_not_done))) begin
        i_2_reg_430 <= i_9_fu_1104_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_i2_reg_1341) & (1'd1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        i_i1_reg_442 <= i_8_reg_1345;
    end else if (((1'd1 == ap_CS_fsm_state13) & (1'd0 == exitcond_fu_772_p2))) begin
        i_i1_reg_442 <= 5'd16;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state13) & ~(1'd0 == exitcond_fu_772_p2))) begin
        i_i2_reg_464 <= 5'd16;
    end else if (((1'd0 == tmp_i1_reg_1430) & (1'd1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_i2_reg_464 <= i_7_reg_1434;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state44)) begin
        i_i3_reg_453 <= i_14_reg_1381;
    end else if ((1'd1 == ap_CS_fsm_state31)) begin
        i_i3_reg_453 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state6) & ~(1'd0 == tmp_68_fu_582_p2))) begin
        i_i_reg_419 <= 5'd16;
    end else if (((tmp_i_reg_1208 == 1'd0) & (1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_i_reg_419 <= i_6_reg_1212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0) & (1'd0 == tmp_fu_565_p2))) begin
        i_reg_385 <= i_5_fu_571_p2;
    end else if (((ap_CS_fsm_state1 == 1'd1) & ~(1'b0 == ap_start))) begin
        i_reg_385 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done) & (1'd1 == ap_CS_fsm_state45))) begin
        rcon_1_fu_136 <= grp_aes_expandEncKey_fu_475_ap_return;
    end else if ((1'd1 == ap_CS_fsm_state12)) begin
        rcon_1_fu_136 <= 8'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state5)) begin
        rcon_reg_396 <= 8'd1;
    end else if (((1'd1 == ap_CS_fsm_state7) & ~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done))) begin
        rcon_reg_396 <= grp_aes_expandEncKey_fu_475_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state33) | (1'd1 == ap_CS_fsm_state56))) begin
        reg_499 <= buf_r_q1;
    end else if ((((1'd1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0) & (tmp_i_reg_1208 == 1'd0)) | ((1'd1 == ap_CS_fsm_pp2_stage2) & (1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == tmp_i2_reg_1341)) | (1'd1 == ap_CS_fsm_state21) | ((1'd1 == ap_CS_fsm_pp3_stage2) & (1'b1 == ap_enable_reg_pp3_iter0) & (1'd0 == tmp_i1_reg_1430)))) begin
        reg_499 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state33) | (1'd1 == ap_CS_fsm_state56))) begin
        reg_511 <= buf_r_q0;
    end else if (((1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61))) begin
        reg_511 <= buf_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61))) begin
        reg_518 <= buf_r_q0;
    end else if (((1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state34) | (1'd1 == ap_CS_fsm_state57))) begin
        reg_518 <= buf_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_pp0_stage0)) begin
        ap_pipeline_reg_pp0_iter1_tmp_reg_1168 <= tmp_reg_1168;
        ap_pipeline_reg_pp0_iter1_tmp_s_reg_1177[5 : 0] <= tmp_s_reg_1177[5 : 0];
        tmp_reg_1168 <= tmp_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state12)) begin
        buf_addr_10_reg_1318 <= sum11_i_cast_fu_749_p1;
        buf_addr_11_reg_1323 <= sum12_i_cast_fu_759_p1;
        buf_addr_1_reg_1272 <= sum3_i_cast_fu_659_p1;
        buf_addr_2_reg_1278 <= sum5_i_cast_fu_669_p1;
        buf_addr_3_reg_1283 <= sum7_i_cast_fu_679_p1;
        buf_addr_4_reg_1288 <= sum9_i_cast_fu_689_p1;
        buf_addr_5_reg_1293 <= sum2_i_cast_fu_699_p1;
        buf_addr_6_reg_1298 <= sum4_i_cast_fu_709_p1;
        buf_addr_7_reg_1303 <= sum6_i_cast_fu_719_p1;
        buf_addr_8_reg_1308 <= sum8_i_cast_fu_729_p1;
        buf_addr_9_reg_1313 <= sum10_i_cast_fu_739_p1;
        buf_addr_reg_1266 <= sum1_i8_cast_fu_649_p1;
        tmp_72_reg_1328 <= tmp_72_fu_764_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_i_reg_1208 == 1'd0) & (1'd1 == ap_CS_fsm_pp1_stage1))) begin
        buf_addr_12_reg_1233 <= sum1_i_cast_fu_629_p1;
        tmp_91_i_reg_1238[4 : 0] <= tmp_91_i_fu_634_p1[4 : 0];
        tmp_i_18_reg_1223[7 : 0] <= tmp_i_18_fu_615_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_i1_reg_1430) & (1'd1 == ap_CS_fsm_pp3_stage1))) begin
        buf_addr_13_reg_1440 <= sum1_i2_cast_fu_1134_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == tmp_i2_reg_1341) & (1'd1 == ap_CS_fsm_pp2_stage1))) begin
        buf_addr_14_reg_1351 <= sum1_i4_cast_fu_806_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state32) & (1'd0 == tmp_74_fu_816_p3))) begin
        buf_addr_15_reg_1364 <= sum1_i3_cast_fu_833_p1;
        buf_addr_16_reg_1375 <= sum3_i2_cast_fu_857_p1;
        i_14_reg_1381 <= i_14_fu_862_p2;
        tmp_75_reg_1369 <= tmp_75_fu_838_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state33)) begin
        buf_addr_17_reg_1386 <= sum5_i2_cast_fu_882_p1;
        buf_addr_18_reg_1392 <= sum7_i2_cast_fu_901_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage2) & (1'b1 == ap_enable_reg_pp1_iter0) & (tmp_i_reg_1208 == 1'd0))) begin
        ctx_enckey_load_1_reg_1254 <= ctx_body_enckey_q1;
        ctx_enckey_load_reg_1248 <= ctx_body_enckey_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state34)) begin
        e_reg_1398 <= e_fu_918_p2;
        tmp_15_i_reg_1405 <= tmp_15_i_fu_958_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == ap_CS_fsm_pp1_stage0) & (1'd0 == tmp_i_fu_594_p2))) begin
        i_6_reg_1212 <= i_6_fu_600_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == ap_CS_fsm_pp3_stage0) & (1'd0 == tmp_i1_fu_1110_p2))) begin
        i_7_reg_1434 <= i_7_fu_1116_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == ap_CS_fsm_pp2_stage0) & (1'd0 == tmp_i2_fu_782_p2))) begin
        i_8_reg_1345 <= i_8_fu_788_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_pp0_stage0) & (1'd0 == tmp_reg_1168))) begin
        k_load_reg_1188 <= k_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state6) & (1'd0 == tmp_68_fu_582_p2))) begin
        phitmp_reg_1198 <= phitmp_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'd0 == tmp_i2_reg_1341) & (1'd1 == ap_CS_fsm_pp2_stage4)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'd0 == tmp_i1_reg_1430) & (1'd1 == ap_CS_fsm_pp3_stage4)))) begin
        reg_505 <= sbox_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state34) | (1'd1 == ap_CS_fsm_state57))) begin
        reg_525 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state58))) begin
        reg_530 <= buf_r_q1;
        reg_535 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state24) | (1'd1 == ap_CS_fsm_state59))) begin
        reg_540 <= buf_r_q1;
        reg_545 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state25) | (1'd1 == ap_CS_fsm_state60))) begin
        reg_550 <= buf_r_q1;
        reg_555 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd1 == ap_CS_fsm_state32) & ~(1'd0 == tmp_74_fu_816_p3) & (1'd0 == tmp_73_reg_1337)) | (1'd1 == ap_CS_fsm_state65))) begin
        reg_560 <= rcon_1_fu_136;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state37)) begin
        tmp_19_i_reg_1410 <= tmp_19_i_fu_1003_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state40)) begin
        tmp_23_i_reg_1415 <= tmp_23_i_fu_1048_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state43)) begin
        tmp_27_i_reg_1420 <= tmp_27_i_fu_1093_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state13) & (1'd0 == exitcond_fu_772_p2))) begin
        tmp_73_reg_1337 <= tmp_73_fu_778_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'd0 == tmp_i_fu_594_p2))) begin
        tmp_90_i_reg_1218 <= tmp_90_i_fu_606_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_pp3_stage0)) begin
        tmp_i1_reg_1430 <= tmp_i1_fu_1110_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_pp2_stage0)) begin
        tmp_i2_reg_1341 <= tmp_i2_fu_782_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_pp1_stage0)) begin
        tmp_i_reg_1208 <= tmp_i_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_pp0_stage0) & (1'd0 == tmp_fu_565_p2))) begin
        tmp_s_reg_1177[5 : 0] <= tmp_s_fu_577_p1[5 : 0];
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'd1)) | ((1'd1 == ap_CS_fsm_state68) & ~(1'b0 == grp_aes_addRoundKey_fu_484_ap_done)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'd1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state68) & ~(1'b0 == grp_aes_addRoundKey_fu_484_ap_done))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == ap_CS_fsm_pp3_stage1))) begin
        buf_r_address0 = sum1_i2_cast_fu_1134_p1;
    end else if ((1'd1 == ap_CS_fsm_state44)) begin
        buf_r_address0 = buf_addr_18_reg_1392;
    end else if ((1'd1 == ap_CS_fsm_state41)) begin
        buf_r_address0 = buf_addr_17_reg_1386;
    end else if ((1'd1 == ap_CS_fsm_state33)) begin
        buf_r_address0 = sum7_i2_cast_fu_901_p1;
    end else if (((1'd1 == ap_CS_fsm_state32) & (1'd0 == tmp_74_fu_816_p3))) begin
        buf_r_address0 = sum3_i2_cast_fu_857_p1;
    end else if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61) | (1'd1 == ap_CS_fsm_state55))) begin
        buf_r_address0 = buf_addr_1_reg_1272;
    end else if (((1'd1 == ap_CS_fsm_state25) | (1'd1 == ap_CS_fsm_state60) | (1'd1 == ap_CS_fsm_state31) | (1'd1 == ap_CS_fsm_state66))) begin
        buf_r_address0 = buf_addr_11_reg_1323;
    end else if (((1'd1 == ap_CS_fsm_state24) | (1'd1 == ap_CS_fsm_state59) | (1'd1 == ap_CS_fsm_state65) | (1'd1 == ap_CS_fsm_state30))) begin
        buf_r_address0 = buf_addr_9_reg_1313;
    end else if (((1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state58) | (1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state64))) begin
        buf_r_address0 = buf_addr_7_reg_1303;
    end else if (((1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state57) | (1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state63))) begin
        buf_r_address0 = buf_addr_5_reg_1293;
    end else if (((1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state56) | (1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state62))) begin
        buf_r_address0 = buf_addr_3_reg_1283;
    end else if ((1'd1 == ap_CS_fsm_state20)) begin
        buf_r_address0 = buf_addr_reg_1266;
    end else if (((1'd1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        buf_r_address0 = buf_addr_14_reg_1351;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == ap_CS_fsm_pp2_stage1))) begin
        buf_r_address0 = sum1_i4_cast_fu_806_p1;
    end else if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        buf_r_address0 = buf_addr_12_reg_1233;
    end else if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == ap_CS_fsm_pp1_stage1))) begin
        buf_r_address0 = sum1_i_cast_fu_629_p1;
    end else if (((1'd1 == ap_CS_fsm_state48) | ((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        buf_r_address0 = grp_aes_addRoundKey_fu_484_buf_r_address0;
    end else begin
        buf_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        buf_r_address1 = buf_addr_13_reg_1440;
    end else if ((1'd1 == ap_CS_fsm_state42)) begin
        buf_r_address1 = buf_addr_18_reg_1392;
    end else if ((1'd1 == ap_CS_fsm_state39)) begin
        buf_r_address1 = buf_addr_17_reg_1386;
    end else if (((1'd1 == ap_CS_fsm_state36) | (1'd1 == ap_CS_fsm_state38))) begin
        buf_r_address1 = buf_addr_16_reg_1375;
    end else if ((1'd1 == ap_CS_fsm_state35)) begin
        buf_r_address1 = buf_addr_15_reg_1364;
    end else if ((1'd1 == ap_CS_fsm_state33)) begin
        buf_r_address1 = sum5_i2_cast_fu_882_p1;
    end else if (((1'd1 == ap_CS_fsm_state32) & (1'd0 == tmp_74_fu_816_p3))) begin
        buf_r_address1 = sum1_i3_cast_fu_833_p1;
    end else if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61) | (1'd1 == ap_CS_fsm_state55))) begin
        buf_r_address1 = buf_addr_reg_1266;
    end else if (((1'd1 == ap_CS_fsm_state25) | (1'd1 == ap_CS_fsm_state60) | (1'd1 == ap_CS_fsm_state31) | (1'd1 == ap_CS_fsm_state66))) begin
        buf_r_address1 = buf_addr_10_reg_1318;
    end else if (((1'd1 == ap_CS_fsm_state24) | (1'd1 == ap_CS_fsm_state59) | (1'd1 == ap_CS_fsm_state65) | (1'd1 == ap_CS_fsm_state30))) begin
        buf_r_address1 = buf_addr_8_reg_1308;
    end else if (((1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state58) | (1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state64))) begin
        buf_r_address1 = buf_addr_6_reg_1298;
    end else if (((1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state57) | (1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state63))) begin
        buf_r_address1 = buf_addr_4_reg_1288;
    end else if (((1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state56) | (1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state62))) begin
        buf_r_address1 = buf_addr_2_reg_1278;
    end else if ((1'd1 == ap_CS_fsm_state20)) begin
        buf_r_address1 = buf_addr_1_reg_1272;
    end else begin
        buf_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state33) | (1'd1 == ap_CS_fsm_state56) | (1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61) | (1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state57) | (1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state58) | (1'd1 == ap_CS_fsm_state24) | (1'd1 == ap_CS_fsm_state59) | (1'd1 == ap_CS_fsm_state25) | (1'd1 == ap_CS_fsm_state60) | (1'd1 == ap_CS_fsm_state65) | ((1'd1 == ap_CS_fsm_state32) & (1'd0 == tmp_74_fu_816_p3)) | ((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'd1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | (1'd1 == ap_CS_fsm_state31) | (1'd1 == ap_CS_fsm_state44) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == ap_CS_fsm_pp1_stage1)) | ((1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == ap_CS_fsm_pp2_stage1)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == ap_CS_fsm_pp3_stage1)) | (1'd1 == ap_CS_fsm_state20) | (1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state30) | (1'd1 == ap_CS_fsm_state41) | (1'd1 == ap_CS_fsm_state55) | (1'd1 == ap_CS_fsm_state62) | (1'd1 == ap_CS_fsm_state63) | (1'd1 == ap_CS_fsm_state64) | (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done) & (1'd1 == ap_CS_fsm_state66)))) begin
        buf_r_ce0 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state48) | ((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        buf_r_ce0 = grp_aes_addRoundKey_fu_484_buf_r_ce0;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state33) | (1'd1 == ap_CS_fsm_state56) | (1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61) | (1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state57) | (1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state58) | (1'd1 == ap_CS_fsm_state24) | (1'd1 == ap_CS_fsm_state59) | (1'd1 == ap_CS_fsm_state25) | (1'd1 == ap_CS_fsm_state60) | (1'd1 == ap_CS_fsm_state65) | ((1'd1 == ap_CS_fsm_state32) & (1'd0 == tmp_74_fu_816_p3)) | (1'd1 == ap_CS_fsm_state31) | ((1'd1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | (1'd1 == ap_CS_fsm_state20) | (1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state30) | (1'd1 == ap_CS_fsm_state35) | (1'd1 == ap_CS_fsm_state36) | (1'd1 == ap_CS_fsm_state38) | (1'd1 == ap_CS_fsm_state39) | (1'd1 == ap_CS_fsm_state42) | (1'd1 == ap_CS_fsm_state55) | (1'd1 == ap_CS_fsm_state62) | (1'd1 == ap_CS_fsm_state63) | (1'd1 == ap_CS_fsm_state64) | (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done) & (1'd1 == ap_CS_fsm_state66)))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state44)) begin
        buf_r_d0 = tmp_27_i_reg_1420;
    end else if ((1'd1 == ap_CS_fsm_state41)) begin
        buf_r_d0 = tmp_23_i_reg_1415;
    end else if (((1'd1 == ap_CS_fsm_state31) | (1'd1 == ap_CS_fsm_state66))) begin
        buf_r_d0 = reg_511;
    end else if (((1'd1 == ap_CS_fsm_state65) | (1'd1 == ap_CS_fsm_state30))) begin
        buf_r_d0 = reg_540;
    end else if (((1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state64))) begin
        buf_r_d0 = reg_550;
    end else if (((1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state63))) begin
        buf_r_d0 = reg_530;
    end else if (((1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state62))) begin
        buf_r_d0 = reg_499;
    end else if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61))) begin
        buf_r_d0 = reg_518;
    end else if (((1'd1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        buf_r_d0 = reg_505;
    end else if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        buf_r_d0 = tmp_88_i_fu_638_p2;
    end else if (((1'd1 == ap_CS_fsm_state48) | ((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        buf_r_d0 = grp_aes_addRoundKey_fu_484_buf_r_d0;
    end else begin
        buf_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        buf_r_d1 = reg_505;
    end else if ((1'd1 == ap_CS_fsm_state38)) begin
        buf_r_d1 = tmp_19_i_reg_1410;
    end else if ((1'd1 == ap_CS_fsm_state35)) begin
        buf_r_d1 = tmp_15_i_reg_1405;
    end else if (((1'd1 == ap_CS_fsm_state31) | (1'd1 == ap_CS_fsm_state66))) begin
        buf_r_d1 = reg_518;
    end else if (((1'd1 == ap_CS_fsm_state65) | (1'd1 == ap_CS_fsm_state30))) begin
        buf_r_d1 = reg_555;
    end else if (((1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state64))) begin
        buf_r_d1 = reg_545;
    end else if (((1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state63))) begin
        buf_r_d1 = reg_535;
    end else if (((1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state62))) begin
        buf_r_d1 = reg_525;
    end else if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61))) begin
        buf_r_d1 = reg_511;
    end else begin
        buf_r_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61) | (1'd1 == ap_CS_fsm_state65) | ((tmp_i_reg_1208 == 1'd0) & (1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1)) | ((1'd0 == tmp_i2_reg_1341) & (1'd1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1)) | (1'd1 == ap_CS_fsm_state31) | (1'd1 == ap_CS_fsm_state44) | (1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state30) | (1'd1 == ap_CS_fsm_state41) | (1'd1 == ap_CS_fsm_state62) | (1'd1 == ap_CS_fsm_state63) | (1'd1 == ap_CS_fsm_state64) | (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done) & (1'd1 == ap_CS_fsm_state66)))) begin
        buf_r_we0 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state48) | ((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        buf_r_we0 = grp_aes_addRoundKey_fu_484_buf_r_we0;
    end else begin
        buf_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state26) | (1'd1 == ap_CS_fsm_state61) | (1'd1 == ap_CS_fsm_state65) | (1'd1 == ap_CS_fsm_state31) | ((1'd0 == tmp_i1_reg_1430) & (1'd1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1)) | (1'd1 == ap_CS_fsm_state27) | (1'd1 == ap_CS_fsm_state28) | (1'd1 == ap_CS_fsm_state29) | (1'd1 == ap_CS_fsm_state30) | (1'd1 == ap_CS_fsm_state35) | (1'd1 == ap_CS_fsm_state38) | (1'd1 == ap_CS_fsm_state62) | (1'd1 == ap_CS_fsm_state63) | (1'd1 == ap_CS_fsm_state64) | (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done) & (1'd1 == ap_CS_fsm_state66)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
        ctx_body_deckey_address0 = ap_pipeline_reg_pp0_iter1_tmp_s_reg_1177;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        ctx_body_deckey_address0 = grp_aes_expandEncKey_fu_475_k_address0;
    end else begin
        ctx_body_deckey_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
        ctx_body_deckey_ce0 = 1'b1;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        ctx_body_deckey_ce0 = grp_aes_expandEncKey_fu_475_k_ce0;
    end else begin
        ctx_body_deckey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state7)) begin
        ctx_body_deckey_ce1 = grp_aes_expandEncKey_fu_475_k_ce1;
    end else begin
        ctx_body_deckey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
        ctx_body_deckey_d0 = k_load_reg_1188;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        ctx_body_deckey_d0 = grp_aes_expandEncKey_fu_475_k_d0;
    end else begin
        ctx_body_deckey_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_pipeline_reg_pp0_iter1_tmp_reg_1168))) begin
        ctx_body_deckey_we0 = 1'b1;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        ctx_body_deckey_we0 = grp_aes_expandEncKey_fu_475_k_we0;
    end else begin
        ctx_body_deckey_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state7)) begin
        ctx_body_deckey_we1 = grp_aes_expandEncKey_fu_475_k_we1;
    end else begin
        ctx_body_deckey_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == ap_CS_fsm_pp1_stage1))) begin
        ctx_body_enckey_address0 = tmp_i_18_fu_615_p1;
    end else if ((1'b1 == ap_enable_reg_pp0_iter2)) begin
        ctx_body_enckey_address0 = ap_pipeline_reg_pp0_iter1_tmp_s_reg_1177;
    end else begin
        ctx_body_enckey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) | ((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == ap_CS_fsm_pp1_stage1)))) begin
        ctx_body_enckey_ce0 = 1'b1;
    end else begin
        ctx_body_enckey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp1_iter0) & (1'd1 == ap_CS_fsm_pp1_stage1))) begin
        ctx_body_enckey_ce1 = 1'b1;
    end else begin
        ctx_body_enckey_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp0_iter2) & (1'd0 == ap_pipeline_reg_pp0_iter1_tmp_reg_1168))) begin
        ctx_body_enckey_we0 = 1'b1;
    end else begin
        ctx_body_enckey_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_address0 = tmp_i_18_reg_1223;
    end else if (((1'd1 == ap_CS_fsm_state48) | ((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        ctx_body_key_address0 = grp_aes_addRoundKey_fu_484_key_address0;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_address0 = grp_aes_expandEncKey_fu_475_k_address0;
    end else begin
        ctx_body_key_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_address1 = tmp_91_i_reg_1238;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_address1 = grp_aes_expandEncKey_fu_475_k_address1;
    end else begin
        ctx_body_key_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_ce0 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state48) | ((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        ctx_body_key_ce0 = grp_aes_addRoundKey_fu_484_key_ce0;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_ce0 = grp_aes_expandEncKey_fu_475_k_ce0;
    end else begin
        ctx_body_key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_ce1 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_ce1 = grp_aes_expandEncKey_fu_475_k_ce1;
    end else begin
        ctx_body_key_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_d0 = ctx_enckey_load_reg_1248;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_d0 = grp_aes_expandEncKey_fu_475_k_d0;
    end else begin
        ctx_body_key_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_d1 = ctx_enckey_load_1_reg_1254;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_d1 = grp_aes_expandEncKey_fu_475_k_d1;
    end else begin
        ctx_body_key_d1 = 'bx;
    end
end

always @ (*) begin
    if (((tmp_i_reg_1208 == 1'd0) & (1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_we0 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_we0 = grp_aes_expandEncKey_fu_475_k_we0;
    end else begin
        ctx_body_key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_i_reg_1208 == 1'd0) & (1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        ctx_body_key_we1 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        ctx_body_key_we1 = grp_aes_expandEncKey_fu_475_k_we1;
    end else begin
        ctx_body_key_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd0 == tmp_73_reg_1337) & (1'd1 == ap_CS_fsm_state47)) | (1'd1 == ap_CS_fsm_state68))) begin
        grp_aes_addRoundKey_fu_484_key_offset = 6'd0;
    end else if ((1'd1 == ap_CS_fsm_state48)) begin
        grp_aes_addRoundKey_fu_484_key_offset = 6'd16;
    end else begin
        grp_aes_addRoundKey_fu_484_key_offset = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        grp_aes_expandEncKey_fu_475_k_q0 = ctx_body_key_q0;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        grp_aes_expandEncKey_fu_475_k_q0 = ctx_body_deckey_q0;
    end else begin
        grp_aes_expandEncKey_fu_475_k_q0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        grp_aes_expandEncKey_fu_475_k_q1 = ctx_body_key_q1;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        grp_aes_expandEncKey_fu_475_k_q1 = ctx_body_deckey_q1;
    end else begin
        grp_aes_expandEncKey_fu_475_k_q1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        grp_aes_expandEncKey_fu_475_rc_read = reg_560;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        grp_aes_expandEncKey_fu_475_rc_read = rcon_reg_396;
    end else begin
        grp_aes_expandEncKey_fu_475_rc_read = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == tmp_i2_reg_1341) & (1'd1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_enable_reg_pp2_iter1))) begin
        i_i1_phi_fu_446_p4 = i_8_reg_1345;
    end else begin
        i_i1_phi_fu_446_p4 = i_i1_reg_442;
    end
end

always @ (*) begin
    if (((1'd0 == tmp_i1_reg_1430) & (1'd1 == ap_CS_fsm_pp3_stage0) & (1'b1 == ap_enable_reg_pp3_iter1))) begin
        i_i2_phi_fu_468_p4 = i_7_reg_1434;
    end else begin
        i_i2_phi_fu_468_p4 = i_i2_reg_464;
    end
end

always @ (*) begin
    if (((tmp_i_reg_1208 == 1'd0) & (1'd1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_enable_reg_pp1_iter1))) begin
        i_i_phi_fu_423_p4 = i_6_reg_1212;
    end else begin
        i_i_phi_fu_423_p4 = i_i_reg_419;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_enable_reg_pp0_iter0))) begin
        k_ce0 = 1'b1;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == ap_CS_fsm_pp3_stage3))) begin
        sbox_address0 = tmp_3_i1_fu_1139_p1;
    end else if (((1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == ap_CS_fsm_pp2_stage3))) begin
        sbox_address0 = tmp_3_i_fu_811_p1;
    end else if (((1'd1 == ap_CS_fsm_state7) | (1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        sbox_address0 = 8'd0;
    end else begin
        sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_enable_reg_pp2_iter0) & (1'd1 == ap_CS_fsm_pp2_stage3)) | ((1'b1 == ap_enable_reg_pp3_iter0) & (1'd1 == ap_CS_fsm_pp3_stage3)))) begin
        sbox_ce0 = 1'b1;
    end else if (((1'd1 == ap_CS_fsm_state7) | (1'd1 == ap_CS_fsm_state45) | (1'd1 == ap_CS_fsm_state66))) begin
        sbox_ce0 = 1'b0;
    end else begin
        sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        63'd1 : begin
            if (~(1'b0 == ap_start)) begin
                ap_NS_fsm = 63'd2;
            end else begin
                ap_NS_fsm = 63'd1;
            end
        end
        63'd2 : begin
            if ((~((1'b1 == ap_enable_reg_pp0_iter2) & ~(1'b1 == ap_enable_reg_pp0_iter1)) & ~((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'd0 == tmp_fu_565_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1)))) begin
                ap_NS_fsm = 63'd2;
            end else if (((1'b1 == ap_enable_reg_pp0_iter0) & ~(1'd0 == tmp_fu_565_p2) & ~(1'b1 == ap_enable_reg_pp0_iter1))) begin
                ap_NS_fsm = 63'd4;
            end else begin
                ap_NS_fsm = 63'd4;
            end
        end
        63'd4 : begin
            ap_NS_fsm = 63'd8;
        end
        63'd8 : begin
            if (~(1'd0 == tmp_68_fu_582_p2)) begin
                ap_NS_fsm = 63'd32;
            end else begin
                ap_NS_fsm = 63'd16;
            end
        end
        63'd16 : begin
            if (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done)) begin
                ap_NS_fsm = 63'd8;
            end else begin
                ap_NS_fsm = 63'd16;
            end
        end
        63'd32 : begin
            if (~((1'b1 == ap_enable_reg_pp1_iter0) & ~(1'd0 == tmp_i_fu_594_p2))) begin
                ap_NS_fsm = 63'd64;
            end else begin
                ap_NS_fsm = 63'd256;
            end
        end
        63'd64 : begin
            ap_NS_fsm = 63'd128;
        end
        63'd128 : begin
            ap_NS_fsm = 63'd32;
        end
        63'd256 : begin
            ap_NS_fsm = 63'd512;
        end
        63'd512 : begin
            if (~(1'd0 == exitcond_fu_772_p2)) begin
                ap_NS_fsm = 63'd17592186044416;
            end else begin
                ap_NS_fsm = 63'd1024;
            end
        end
        63'd1024 : begin
            if (~((1'b1 == ap_enable_reg_pp2_iter0) & ~(1'd0 == tmp_i2_fu_782_p2))) begin
                ap_NS_fsm = 63'd2048;
            end else begin
                ap_NS_fsm = 63'd32768;
            end
        end
        63'd2048 : begin
            ap_NS_fsm = 63'd4096;
        end
        63'd4096 : begin
            ap_NS_fsm = 63'd8192;
        end
        63'd8192 : begin
            ap_NS_fsm = 63'd16384;
        end
        63'd16384 : begin
            ap_NS_fsm = 63'd1024;
        end
        63'd32768 : begin
            ap_NS_fsm = 63'd65536;
        end
        63'd65536 : begin
            ap_NS_fsm = 63'd131072;
        end
        63'd131072 : begin
            ap_NS_fsm = 63'd262144;
        end
        63'd262144 : begin
            ap_NS_fsm = 63'd524288;
        end
        63'd524288 : begin
            ap_NS_fsm = 63'd1048576;
        end
        63'd1048576 : begin
            ap_NS_fsm = 63'd2097152;
        end
        63'd2097152 : begin
            ap_NS_fsm = 63'd4194304;
        end
        63'd4194304 : begin
            ap_NS_fsm = 63'd8388608;
        end
        63'd8388608 : begin
            ap_NS_fsm = 63'd16777216;
        end
        63'd16777216 : begin
            ap_NS_fsm = 63'd33554432;
        end
        63'd33554432 : begin
            ap_NS_fsm = 63'd67108864;
        end
        63'd67108864 : begin
            ap_NS_fsm = 63'd134217728;
        end
        63'd134217728 : begin
            if ((~(1'd0 == tmp_74_fu_816_p3) & ~(1'd0 == tmp_73_reg_1337))) begin
                ap_NS_fsm = 63'd8796093022208;
            end else if ((~(1'd0 == tmp_74_fu_816_p3) & (1'd0 == tmp_73_reg_1337))) begin
                ap_NS_fsm = 63'd1099511627776;
            end else begin
                ap_NS_fsm = 63'd268435456;
            end
        end
        63'd268435456 : begin
            ap_NS_fsm = 63'd536870912;
        end
        63'd536870912 : begin
            ap_NS_fsm = 63'd1073741824;
        end
        63'd1073741824 : begin
            ap_NS_fsm = 63'd2147483648;
        end
        63'd2147483648 : begin
            ap_NS_fsm = 63'd4294967296;
        end
        63'd4294967296 : begin
            ap_NS_fsm = 63'd8589934592;
        end
        63'd8589934592 : begin
            ap_NS_fsm = 63'd17179869184;
        end
        63'd17179869184 : begin
            ap_NS_fsm = 63'd34359738368;
        end
        63'd34359738368 : begin
            ap_NS_fsm = 63'd68719476736;
        end
        63'd68719476736 : begin
            ap_NS_fsm = 63'd137438953472;
        end
        63'd137438953472 : begin
            ap_NS_fsm = 63'd274877906944;
        end
        63'd274877906944 : begin
            ap_NS_fsm = 63'd549755813888;
        end
        63'd549755813888 : begin
            ap_NS_fsm = 63'd134217728;
        end
        63'd1099511627776 : begin
            if (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done)) begin
                ap_NS_fsm = 63'd2199023255552;
            end else begin
                ap_NS_fsm = 63'd1099511627776;
            end
        end
        63'd2199023255552 : begin
            ap_NS_fsm = 63'd4398046511104;
        end
        63'd4398046511104 : begin
            if (~(1'b1 == ap_block_state47_subcall_not_done)) begin
                ap_NS_fsm = 63'd512;
            end else begin
                ap_NS_fsm = 63'd4398046511104;
            end
        end
        63'd8796093022208 : begin
            if (~(1'b0 == grp_aes_addRoundKey_fu_484_ap_done)) begin
                ap_NS_fsm = 63'd4398046511104;
            end else begin
                ap_NS_fsm = 63'd8796093022208;
            end
        end
        63'd17592186044416 : begin
            if (~((1'b1 == ap_enable_reg_pp3_iter0) & ~(1'd0 == tmp_i1_fu_1110_p2))) begin
                ap_NS_fsm = 63'd35184372088832;
            end else begin
                ap_NS_fsm = 63'd562949953421312;
            end
        end
        63'd35184372088832 : begin
            ap_NS_fsm = 63'd70368744177664;
        end
        63'd70368744177664 : begin
            ap_NS_fsm = 63'd140737488355328;
        end
        63'd140737488355328 : begin
            ap_NS_fsm = 63'd281474976710656;
        end
        63'd281474976710656 : begin
            ap_NS_fsm = 63'd17592186044416;
        end
        63'd562949953421312 : begin
            ap_NS_fsm = 63'd1125899906842624;
        end
        63'd1125899906842624 : begin
            ap_NS_fsm = 63'd2251799813685248;
        end
        63'd2251799813685248 : begin
            ap_NS_fsm = 63'd4503599627370496;
        end
        63'd4503599627370496 : begin
            ap_NS_fsm = 63'd9007199254740992;
        end
        63'd9007199254740992 : begin
            ap_NS_fsm = 63'd18014398509481984;
        end
        63'd18014398509481984 : begin
            ap_NS_fsm = 63'd36028797018963968;
        end
        63'd36028797018963968 : begin
            ap_NS_fsm = 63'd72057594037927936;
        end
        63'd72057594037927936 : begin
            ap_NS_fsm = 63'd144115188075855872;
        end
        63'd144115188075855872 : begin
            ap_NS_fsm = 63'd288230376151711744;
        end
        63'd288230376151711744 : begin
            ap_NS_fsm = 63'd576460752303423488;
        end
        63'd576460752303423488 : begin
            ap_NS_fsm = 63'd1152921504606846976;
        end
        63'd1152921504606846976 : begin
            if (~(1'b0 == grp_aes_expandEncKey_fu_475_ap_done)) begin
                ap_NS_fsm = 63'd2305843009213693952;
            end else begin
                ap_NS_fsm = 63'd1152921504606846976;
            end
        end
        63'd2305843009213693952 : begin
            ap_NS_fsm = 63'd4611686018427387904;
        end
        63'd4611686018427387904 : begin
            if (~(1'b0 == grp_aes_addRoundKey_fu_484_ap_done)) begin
                ap_NS_fsm = 63'd1;
            end else begin
                ap_NS_fsm = 63'd4611686018427387904;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage2 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp2_stage2 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp2_stage3 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp2_stage4 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp3_stage0 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_pp3_stage1 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_pp3_stage2 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_pp3_stage3 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_pp3_stage4 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state61 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state62 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state63 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state66 = ap_CS_fsm[32'd60];

assign ap_CS_fsm_state67 = ap_CS_fsm[32'd61];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd62];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state47_subcall_not_done = ((1'd0 == tmp_73_reg_1337) & (1'b0 == grp_aes_addRoundKey_fu_484_ap_done));
end

always @ (*) begin
    ap_enable_pp0 = ((ap_enable_reg_pp0_iter0 == 1'b1) | (ap_enable_reg_pp0_iter1 == 1'b1) | (ap_enable_reg_pp0_iter2 == 1'b1));
end

always @ (*) begin
    ap_enable_pp1 = ((ap_enable_reg_pp1_iter0 == 1'b1) | (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_enable_pp2 = ((ap_enable_reg_pp2_iter0 == 1'b1) | (ap_enable_reg_pp2_iter1 == 1'b1));
end

always @ (*) begin
    ap_enable_pp3 = ((ap_enable_reg_pp3_iter0 == 1'b1) | (ap_enable_reg_pp3_iter1 == 1'b1));
end

assign ctx_body_enckey_address1 = tmp_91_i_fu_634_p1;

assign e_fu_918_p2 = (tmp1_fu_912_p2 ^ buf_r_q1);

assign exitcond_fu_772_p2 = ((i_2_reg_430 == 4'd14) ? 1'b1 : 1'b0);

assign grp_aes_addRoundKey_fu_484_ap_start = ap_reg_grp_aes_addRoundKey_fu_484_ap_start;

assign grp_aes_expandEncKey_fu_475_ap_start = ap_reg_grp_aes_expandEncKey_fu_475_ap_start;

assign i_14_fu_862_p2 = (5'd4 + i_i3_reg_453);

assign i_5_fu_571_p2 = (i_reg_385 + 6'd1);

assign i_6_cast_fu_612_p1 = $signed(i_6_reg_1212);

assign i_6_fu_600_p2 = ($signed(i_i_phi_fu_423_p4) + $signed(5'd31));

assign i_7_cast_fu_1122_p1 = $signed(i_7_reg_1434);

assign i_7_fu_1116_p2 = ($signed(i_i2_phi_fu_468_p4) + $signed(5'd31));

assign i_8_cast_fu_794_p1 = $signed(i_8_reg_1345);

assign i_8_fu_788_p2 = ($signed(i_i1_phi_fu_446_p4) + $signed(5'd31));

assign i_9_fu_1104_p2 = (i_2_reg_430 + 4'd1);

assign k_address0 = tmp_s_fu_577_p1;

assign phitmp_fu_588_p2 = ($signed(i_1_reg_408) + $signed(3'd7));

assign sum10_i_cast_fu_739_p1 = sum10_i_fu_734_p2;

assign sum10_i_fu_734_p2 = (13'd7 + sum);

assign sum11_i_cast_fu_749_p1 = sum11_i_fu_744_p2;

assign sum11_i_fu_744_p2 = (13'd14 + sum);

assign sum12_i_cast_fu_759_p1 = sum12_i_fu_754_p2;

assign sum12_i_fu_754_p2 = (13'd6 + sum);

assign sum1_i2_cast_fu_1134_p1 = sum1_i2_fu_1129_p2;

assign sum1_i2_fu_1129_p2 = (tmp_i1_cast_fu_1125_p1 + sum);

assign sum1_i3_cast_fu_833_p1 = sum1_i3_fu_828_p2;

assign sum1_i3_fu_828_p2 = (sum + tmp_i2_cast_fu_824_p1);

assign sum1_i4_cast_fu_806_p1 = sum1_i4_fu_801_p2;

assign sum1_i4_fu_801_p2 = (tmp_i3_cast_fu_797_p1 + sum);

assign sum1_i8_cast_fu_649_p1 = sum1_i8_fu_644_p2;

assign sum1_i8_fu_644_p2 = (13'd1 + sum);

assign sum1_i_cast_fu_629_p1 = sum1_i_fu_624_p2;

assign sum1_i_fu_624_p2 = (tmp_i_cast_fu_620_p1 + sum);

assign sum2_i_cast_fu_699_p1 = sum2_i_fu_694_p2;

assign sum2_i_fu_694_p2 = (13'd2 + sum);

assign sum3_i2_cast_fu_857_p1 = sum3_i2_fu_852_p2;

assign sum3_i2_fu_852_p2 = (sum + tmp_6_i_cast_fu_848_p1);

assign sum3_i_cast_fu_659_p1 = sum3_i_fu_654_p2;

assign sum3_i_fu_654_p2 = (13'd5 + sum);

assign sum4_i_cast_fu_709_p1 = sum4_i_fu_704_p2;

assign sum4_i_fu_704_p2 = (13'd3 + sum);

assign sum5_i2_cast_fu_882_p1 = sum5_i2_fu_877_p2;

assign sum5_i2_fu_877_p2 = (sum + tmp_8_i_cast_fu_873_p1);

assign sum5_i_cast_fu_669_p1 = sum5_i_fu_664_p2;

assign sum5_i_fu_664_p2 = (13'd9 + sum);

assign sum6_i_cast_fu_719_p1 = sum6_i_fu_714_p2;

assign sum6_i_fu_714_p2 = (13'd15 + sum);

assign sum7_i2_cast_fu_901_p1 = sum7_i2_fu_896_p2;

assign sum7_i2_fu_896_p2 = (sum + tmp_10_i_cast_fu_892_p1);

assign sum7_i_cast_fu_679_p1 = sum7_i_fu_674_p2;

assign sum7_i_fu_674_p2 = (13'd13 + sum);

assign sum8_i_cast_fu_729_p1 = sum8_i_fu_724_p2;

assign sum8_i_fu_724_p2 = (13'd11 + sum);

assign sum9_i_cast_fu_689_p1 = sum9_i_fu_684_p2;

assign sum9_i_fu_684_p2 = (13'd10 + sum);

assign tmp1_fu_912_p2 = (buf_r_q0 ^ x_assign_fu_906_p2);

assign tmp2_fu_952_p2 = (tmp_2_i_i_fu_944_p3 ^ e_fu_918_p2);

assign tmp3_fu_998_p2 = (tmp_2_i4_i_fu_990_p3 ^ e_reg_1398);

assign tmp4_fu_1043_p2 = (tmp_2_i8_i_fu_1035_p3 ^ e_reg_1398);

assign tmp5_fu_1088_p2 = (tmp_2_i12_i_fu_1080_p3 ^ e_reg_1398);

assign tmp_10_i_cast_fu_892_p1 = tmp_9_i_fu_887_p2;

assign tmp_15_i_fu_958_p2 = (tmp2_fu_952_p2 ^ reg_499);

assign tmp_19_i_fu_1003_p2 = (tmp3_fu_998_p2 ^ buf_r_q1);

assign tmp_1_i11_i_fu_1074_p2 = (tmp_83_fu_1068_p2 ^ 8'd27);

assign tmp_1_i3_i_fu_984_p2 = (tmp_79_fu_978_p2 ^ 8'd27);

assign tmp_1_i7_i_fu_1029_p2 = (tmp_81_fu_1023_p2 ^ 8'd27);

assign tmp_1_i_i_fu_938_p2 = (tmp_77_fu_932_p2 ^ 8'd27);

assign tmp_23_i_fu_1048_p2 = (tmp4_fu_1043_p2 ^ buf_r_q1);

assign tmp_27_i_fu_1093_p2 = (tmp5_fu_1088_p2 ^ buf_r_q1);

assign tmp_2_i12_i_fu_1080_p3 = ((tmp_82_fu_1060_p3[0:0] === 1'b1) ? tmp_1_i11_i_fu_1074_p2 : tmp_83_fu_1068_p2);

assign tmp_2_i4_i_fu_990_p3 = ((tmp_78_fu_970_p3[0:0] === 1'b1) ? tmp_1_i3_i_fu_984_p2 : tmp_79_fu_978_p2);

assign tmp_2_i8_i_fu_1035_p3 = ((tmp_80_fu_1015_p3[0:0] === 1'b1) ? tmp_1_i7_i_fu_1029_p2 : tmp_81_fu_1023_p2);

assign tmp_2_i_i_fu_944_p3 = ((tmp_76_fu_924_p3[0:0] === 1'b1) ? tmp_1_i_i_fu_938_p2 : tmp_77_fu_932_p2);

assign tmp_3_i1_fu_1139_p1 = reg_499;

assign tmp_3_i_fu_811_p1 = reg_499;

assign tmp_5_i_fu_842_p2 = (tmp_75_fu_838_p1 | 4'd1);

assign tmp_68_fu_582_p2 = ((i_1_reg_408 == 3'd0) ? 1'b1 : 1'b0);

assign tmp_6_i_cast_fu_848_p1 = tmp_5_i_fu_842_p2;

assign tmp_72_fu_764_p1 = sum[11:0];

assign tmp_73_fu_778_p1 = i_2_reg_430[0:0];

assign tmp_74_fu_816_p3 = i_i3_reg_453[32'd4];

assign tmp_75_fu_838_p1 = i_i3_reg_453[3:0];

assign tmp_76_fu_924_p3 = x_assign_fu_906_p2[32'd7];

assign tmp_77_fu_932_p2 = x_assign_fu_906_p2 << 8'd1;

assign tmp_78_fu_970_p3 = x_assign_1_fu_964_p2[32'd7];

assign tmp_79_fu_978_p2 = x_assign_1_fu_964_p2 << 8'd1;

assign tmp_7_i2_fu_868_p2 = (tmp_75_reg_1369 | 4'd2);

assign tmp_80_fu_1015_p3 = x_assign_2_fu_1009_p2[32'd7];

assign tmp_81_fu_1023_p2 = x_assign_2_fu_1009_p2 << 8'd1;

assign tmp_82_fu_1060_p3 = x_assign_3_fu_1054_p2[32'd7];

assign tmp_83_fu_1068_p2 = x_assign_3_fu_1054_p2 << 8'd1;

assign tmp_88_i_fu_638_p2 = (reg_499 ^ ctx_enckey_load_reg_1248);

assign tmp_8_i_cast_fu_873_p1 = tmp_7_i2_fu_868_p2;

assign tmp_90_i_fu_606_p2 = (i_i_phi_fu_423_p4 + 5'd15);

assign tmp_91_i_fu_634_p1 = tmp_90_i_reg_1218;

assign tmp_9_i_fu_887_p2 = (tmp_75_reg_1369 | 4'd3);

assign tmp_fu_565_p2 = ((i_reg_385 == 6'd32) ? 1'b1 : 1'b0);

assign tmp_i1_cast_fu_1125_p1 = $unsigned(i_7_cast_fu_1122_p1);

assign tmp_i1_fu_1110_p2 = ((i_i2_phi_fu_468_p4 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_i2_cast_fu_824_p1 = i_i3_reg_453;

assign tmp_i2_fu_782_p2 = ((i_i1_phi_fu_446_p4 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_i3_cast_fu_797_p1 = $unsigned(i_8_cast_fu_794_p1);

assign tmp_i_18_fu_615_p1 = $unsigned(i_6_cast_fu_612_p1);

assign tmp_i_cast_fu_620_p1 = $unsigned(i_6_cast_fu_612_p1);

assign tmp_i_fu_594_p2 = ((i_i_phi_fu_423_p4 == 5'd0) ? 1'b1 : 1'b0);

assign tmp_s_fu_577_p1 = i_reg_385;

assign x_assign_1_fu_964_p2 = (reg_518 ^ reg_511);

assign x_assign_2_fu_1009_p2 = (reg_525 ^ reg_518);

assign x_assign_3_fu_1054_p2 = (reg_525 ^ reg_499);

assign x_assign_fu_906_p2 = (reg_511 ^ reg_499);

always @ (posedge ap_clk) begin
    tmp_s_reg_1177[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    ap_pipeline_reg_pp0_iter1_tmp_s_reg_1177[63:6] <= 58'b0000000000000000000000000000000000000000000000000000000000;
    tmp_i_18_reg_1223[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    tmp_91_i_reg_1238[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
end

endmodule //aes256_encrypt_ecb
