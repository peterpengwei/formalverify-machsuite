// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2016.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes_expandEncKey (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        k_address0,
        k_ce0,
        k_we0,
        k_d0,
        k_q0,
        k_address1,
        k_ce1,
        k_we1,
        k_d1,
        k_q1,
        rc_read,
        ap_return
);


input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] k_address0;
output   k_ce0;
output   k_we0;
output  [7:0] k_d0;
input  [7:0] k_q0;
output  [4:0] k_address1;
output   k_ce1;
output   k_we1;
output  [7:0] k_d1;
input  [7:0] k_q1;
input  [7:0] rc_read;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] k_address0;
reg k_ce0;
reg k_we0;
reg[7:0] k_d0;
reg[4:0] k_address1;
reg k_ce1;
reg k_we1;
reg[7:0] k_d1;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire   [0:0] ap_CS_fsm_state1;
reg   [7:0] sbox_address0;
reg    sbox_ce0;
wire   [7:0] sbox_q0;
reg   [7:0] sbox_address1;
reg    sbox_ce1;
wire   [7:0] sbox_q1;
reg   [7:0] reg_510;
wire   [0:0] ap_CS_fsm_state2;
wire   [0:0] ap_CS_fsm_state3;
wire   [0:0] ap_CS_fsm_state4;
wire   [0:0] ap_CS_fsm_state14;
wire   [0:0] ap_CS_fsm_state15;
wire   [0:0] ap_CS_fsm_state20;
reg   [7:0] reg_514;
wire   [7:0] grp_fu_492_p2;
reg   [7:0] reg_518;
wire   [0:0] ap_CS_fsm_state5;
wire   [0:0] ap_CS_fsm_state16;
wire   [0:0] ap_CS_fsm_state17;
wire   [7:0] grp_fu_498_p2;
reg   [7:0] reg_523;
wire   [7:0] grp_fu_504_p2;
reg   [7:0] reg_528;
wire   [0:0] ap_CS_fsm_state8;
wire   [0:0] ap_CS_fsm_state11;
wire   [4:0] k_addr_reg_840;
wire   [4:0] k_addr_3_reg_855;
reg   [7:0] sbox_load_reg_860;
wire   [4:0] k_addr_5_reg_870;
wire   [4:0] k_addr_7_reg_880;
wire   [7:0] tmp_19_fu_588_p2;
reg   [7:0] tmp_19_reg_885;
wire   [3:0] tmp_68_fu_602_p1;
reg   [3:0] tmp_68_reg_892;
wire   [0:0] ap_CS_fsm_state7;
wire   [0:0] tmp_48_fu_594_p3;
reg   [4:0] k_addr_9_reg_907;
wire   [4:0] i_2_fu_622_p2;
reg   [4:0] i_2_reg_913;
reg   [4:0] k_addr_11_reg_923;
reg   [7:0] tmp_29_reg_928;
wire   [0:0] ap_CS_fsm_state9;
reg   [4:0] k_addr_13_reg_938;
reg   [7:0] tmp_34_reg_944;
wire   [0:0] ap_CS_fsm_state10;
reg   [4:0] k_addr_15_reg_954;
wire   [0:0] ap_CS_fsm_state13;
wire   [4:0] k_addr_17_reg_984;
wire   [4:0] k_addr_19_reg_994;
wire   [4:0] k_addr_21_reg_1004;
wire   [4:0] k_addr_23_reg_1014;
wire   [4:0] tmp_70_fu_716_p1;
reg   [4:0] tmp_70_reg_1022;
wire   [0:0] ap_CS_fsm_state19;
wire   [0:0] tmp_69_fu_708_p3;
reg   [4:0] k_addr_25_reg_1032;
reg   [4:0] k_addr_27_reg_1037;
wire   [5:0] i_3_fu_736_p2;
reg   [5:0] i_3_reg_1042;
wire   [4:0] tmp_49_fu_742_p2;
reg   [4:0] tmp_49_reg_1047;
wire   [4:0] tmp_53_fu_747_p2;
reg   [4:0] tmp_53_reg_1052;
reg   [4:0] k_addr_29_reg_1057;
reg   [4:0] k_addr_31_reg_1062;
wire   [0:0] ap_CS_fsm_state21;
wire   [4:0] tmp_58_fu_780_p2;
reg   [4:0] tmp_58_reg_1077;
reg   [7:0] k_load_29_reg_1082;
wire   [4:0] tmp_63_fu_785_p2;
reg   [4:0] tmp_63_reg_1087;
reg   [7:0] k_load_31_reg_1092;
wire   [7:0] tmp_52_fu_790_p2;
reg   [7:0] tmp_52_reg_1097;
wire   [0:0] ap_CS_fsm_state22;
wire   [7:0] tmp_57_fu_796_p2;
reg   [7:0] tmp_57_reg_1102;
wire   [7:0] tmp_62_fu_810_p2;
reg   [7:0] tmp_62_reg_1117;
wire   [0:0] ap_CS_fsm_state23;
wire   [7:0] tmp_67_fu_815_p2;
reg   [7:0] tmp_67_reg_1122;
reg   [4:0] i_reg_470;
wire   [0:0] ap_CS_fsm_state6;
wire   [0:0] ap_CS_fsm_state12;
reg   [5:0] i_1_reg_481;
wire   [0:0] ap_CS_fsm_state18;
wire   [0:0] ap_CS_fsm_state24;
wire   [63:0] tmp_fu_534_p1;
wire   [63:0] tmp_12_fu_539_p1;
wire   [63:0] tmp_14_fu_544_p1;
wire   [63:0] tmp_16_fu_549_p1;
wire   [63:0] tmp_22_fu_612_p1;
wire   [63:0] tmp_23_fu_617_p1;
wire   [63:0] tmp_26_fu_633_p1;
wire   [63:0] tmp_28_fu_643_p1;
wire   [63:0] tmp_31_fu_653_p1;
wire   [63:0] tmp_33_fu_663_p1;
wire   [63:0] tmp_36_fu_673_p1;
wire   [63:0] tmp_38_fu_683_p1;
wire   [63:0] tmp_40_fu_688_p1;
wire   [63:0] tmp_42_fu_693_p1;
wire   [63:0] tmp_44_fu_698_p1;
wire   [63:0] tmp_46_fu_703_p1;
wire   [63:0] tmp_51_fu_720_p1;
wire   [63:0] tmp_56_fu_731_p1;
wire   [63:0] tmp_61_fu_757_p1;
wire   [63:0] tmp_66_fu_767_p1;
wire   [63:0] tmp_50_fu_772_p1;
wire   [63:0] tmp_54_fu_776_p1;
wire   [63:0] tmp_59_fu_802_p1;
wire   [63:0] tmp_64_fu_806_p1;
wire   [7:0] tmp_s_fu_560_p2;
wire   [7:0] tmp1_fu_554_p2;
wire   [0:0] tmp_20_fu_572_p3;
wire   [7:0] tmp_22_cast_cast_fu_580_p3;
wire   [7:0] tmp_18_fu_566_p2;
wire   [3:0] tmp_21_fu_606_p2;
wire   [3:0] tmp_25_fu_628_p2;
wire   [3:0] tmp_27_fu_638_p2;
wire   [3:0] tmp_30_fu_648_p2;
wire   [3:0] tmp_32_fu_658_p2;
wire   [3:0] tmp_35_fu_668_p2;
wire   [3:0] tmp_37_fu_678_p2;
wire   [4:0] tmp_55_fu_725_p2;
wire   [4:0] tmp_60_fu_752_p2;
wire   [4:0] tmp_65_fu_762_p2;
wire   [0:0] ap_CS_fsm_state25;
reg   [24:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
end

aes_expandEncKey_sbox #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sbox_address0),
    .ce0(sbox_ce0),
    .q0(sbox_q0),
    .address1(sbox_address1),
    .ce1(sbox_ce1),
    .q1(sbox_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= 25'd1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state24)) begin
        i_1_reg_481 <= i_3_reg_1042;
    end else if ((1'd1 == ap_CS_fsm_state18)) begin
        i_1_reg_481 <= 6'd20;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state12)) begin
        i_reg_470 <= i_2_reg_913;
    end else if ((1'd1 == ap_CS_fsm_state6)) begin
        i_reg_470 <= 5'd4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state7) & (tmp_48_fu_594_p3 == 1'd0))) begin
        i_2_reg_913 <= i_2_fu_622_p2;
        k_addr_9_reg_907 <= tmp_23_fu_617_p1;
        tmp_68_reg_892 <= tmp_68_fu_602_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state19) & (1'd0 == tmp_69_fu_708_p3))) begin
        i_3_reg_1042 <= i_3_fu_736_p2;
        k_addr_25_reg_1032 <= tmp_51_fu_720_p1;
        k_addr_27_reg_1037[4 : 1] <= tmp_56_fu_731_p1[4 : 1];
        tmp_70_reg_1022 <= tmp_70_fu_716_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state8)) begin
        k_addr_11_reg_923[3 : 1] <= tmp_28_fu_643_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state9)) begin
        k_addr_13_reg_938[0] <= tmp_33_fu_663_p1[0];
k_addr_13_reg_938[3 : 2] <= tmp_33_fu_663_p1[3 : 2];
        tmp_29_reg_928 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state10)) begin
        k_addr_15_reg_954[3 : 2] <= tmp_38_fu_683_p1[3 : 2];
        tmp_34_reg_944 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state20)) begin
        k_addr_29_reg_1057[0] <= tmp_61_fu_757_p1[0];
k_addr_29_reg_1057[4 : 2] <= tmp_61_fu_757_p1[4 : 2];
        k_addr_31_reg_1062[4 : 2] <= tmp_66_fu_767_p1[4 : 2];
        tmp_49_reg_1047 <= tmp_49_fu_742_p2;
        tmp_53_reg_1052 <= tmp_53_fu_747_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state21)) begin
        k_load_29_reg_1082 <= k_q0;
        k_load_31_reg_1092 <= k_q1;
        tmp_58_reg_1077 <= tmp_58_fu_780_p2;
        tmp_63_reg_1087 <= tmp_63_fu_785_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state2) | (1'd1 == ap_CS_fsm_state3) | (1'd1 == ap_CS_fsm_state4) | (1'd1 == ap_CS_fsm_state14) | (1'd1 == ap_CS_fsm_state15) | (1'd1 == ap_CS_fsm_state20))) begin
        reg_510 <= k_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state2) | (1'd1 == ap_CS_fsm_state3) | (1'd1 == ap_CS_fsm_state14) | (1'd1 == ap_CS_fsm_state15) | (1'd1 == ap_CS_fsm_state20))) begin
        reg_514 <= k_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state4) | (1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state16) | (1'd1 == ap_CS_fsm_state17))) begin
        reg_518 <= grp_fu_492_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state16) | (1'd1 == ap_CS_fsm_state17))) begin
        reg_523 <= grp_fu_498_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == ap_CS_fsm_state8) | (1'd1 == ap_CS_fsm_state11))) begin
        reg_528 <= grp_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state4)) begin
        sbox_load_reg_860 <= sbox_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state5)) begin
        tmp_19_reg_885 <= tmp_19_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state22)) begin
        tmp_52_reg_1097 <= tmp_52_fu_790_p2;
        tmp_57_reg_1102 <= tmp_57_fu_796_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'd1 == ap_CS_fsm_state23)) begin
        tmp_62_reg_1117 <= tmp_62_fu_810_p2;
        tmp_67_reg_1122 <= tmp_67_fu_815_p2;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'd1)) | (1'd1 == ap_CS_fsm_state25))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_start) & (ap_CS_fsm_state1 == 1'd1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state25)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state24)) begin
        k_address0 = k_addr_29_reg_1057;
    end else if ((1'd1 == ap_CS_fsm_state23)) begin
        k_address0 = k_addr_25_reg_1032;
    end else if ((1'd1 == ap_CS_fsm_state22)) begin
        k_address0 = tmp_59_fu_802_p1;
    end else if ((1'd1 == ap_CS_fsm_state21)) begin
        k_address0 = tmp_50_fu_772_p1;
    end else if ((1'd1 == ap_CS_fsm_state20)) begin
        k_address0 = tmp_61_fu_757_p1;
    end else if ((1'd1 == ap_CS_fsm_state19)) begin
        k_address0 = tmp_51_fu_720_p1;
    end else if ((1'd1 == ap_CS_fsm_state18)) begin
        k_address0 = k_addr_21_reg_1004;
    end else if ((1'd1 == ap_CS_fsm_state17)) begin
        k_address0 = k_addr_17_reg_984;
    end else if ((1'd1 == ap_CS_fsm_state16)) begin
        k_address0 = 64'd18;
    end else if ((1'd1 == ap_CS_fsm_state15)) begin
        k_address0 = 64'd16;
    end else if ((1'd1 == ap_CS_fsm_state14)) begin
        k_address0 = 64'd14;
    end else if ((1'd1 == ap_CS_fsm_state13)) begin
        k_address0 = 64'd12;
    end else if ((1'd1 == ap_CS_fsm_state12)) begin
        k_address0 = k_addr_13_reg_938;
    end else if ((1'd1 == ap_CS_fsm_state11)) begin
        k_address0 = k_addr_9_reg_907;
    end else if ((1'd1 == ap_CS_fsm_state10)) begin
        k_address0 = tmp_36_fu_673_p1;
    end else if ((1'd1 == ap_CS_fsm_state9)) begin
        k_address0 = tmp_31_fu_653_p1;
    end else if ((1'd1 == ap_CS_fsm_state8)) begin
        k_address0 = tmp_26_fu_633_p1;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        k_address0 = tmp_22_fu_612_p1;
    end else if ((1'd1 == ap_CS_fsm_state6)) begin
        k_address0 = k_addr_5_reg_870;
    end else if ((1'd1 == ap_CS_fsm_state5)) begin
        k_address0 = k_addr_reg_840;
    end else if ((1'd1 == ap_CS_fsm_state4)) begin
        k_address0 = 64'd2;
    end else if ((1'd1 == ap_CS_fsm_state3)) begin
        k_address0 = 64'd0;
    end else if ((1'd1 == ap_CS_fsm_state2)) begin
        k_address0 = 64'd31;
    end else if ((ap_CS_fsm_state1 == 1'd1)) begin
        k_address0 = 64'd29;
    end else begin
        k_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state24)) begin
        k_address1 = k_addr_31_reg_1062;
    end else if ((1'd1 == ap_CS_fsm_state23)) begin
        k_address1 = k_addr_27_reg_1037;
    end else if ((1'd1 == ap_CS_fsm_state22)) begin
        k_address1 = tmp_64_fu_806_p1;
    end else if ((1'd1 == ap_CS_fsm_state21)) begin
        k_address1 = tmp_54_fu_776_p1;
    end else if ((1'd1 == ap_CS_fsm_state20)) begin
        k_address1 = tmp_66_fu_767_p1;
    end else if ((1'd1 == ap_CS_fsm_state19)) begin
        k_address1 = tmp_56_fu_731_p1;
    end else if ((1'd1 == ap_CS_fsm_state18)) begin
        k_address1 = k_addr_23_reg_1014;
    end else if ((1'd1 == ap_CS_fsm_state17)) begin
        k_address1 = k_addr_19_reg_994;
    end else if ((1'd1 == ap_CS_fsm_state16)) begin
        k_address1 = 64'd19;
    end else if ((1'd1 == ap_CS_fsm_state15)) begin
        k_address1 = 64'd17;
    end else if ((1'd1 == ap_CS_fsm_state14)) begin
        k_address1 = 64'd15;
    end else if ((1'd1 == ap_CS_fsm_state13)) begin
        k_address1 = 64'd13;
    end else if ((1'd1 == ap_CS_fsm_state12)) begin
        k_address1 = k_addr_15_reg_954;
    end else if ((1'd1 == ap_CS_fsm_state11)) begin
        k_address1 = k_addr_11_reg_923;
    end else if ((1'd1 == ap_CS_fsm_state10)) begin
        k_address1 = tmp_38_fu_683_p1;
    end else if ((1'd1 == ap_CS_fsm_state9)) begin
        k_address1 = tmp_33_fu_663_p1;
    end else if ((1'd1 == ap_CS_fsm_state8)) begin
        k_address1 = tmp_28_fu_643_p1;
    end else if ((1'd1 == ap_CS_fsm_state7)) begin
        k_address1 = tmp_23_fu_617_p1;
    end else if ((1'd1 == ap_CS_fsm_state6)) begin
        k_address1 = k_addr_7_reg_880;
    end else if ((1'd1 == ap_CS_fsm_state5)) begin
        k_address1 = k_addr_3_reg_855;
    end else if ((1'd1 == ap_CS_fsm_state4)) begin
        k_address1 = 64'd3;
    end else if ((1'd1 == ap_CS_fsm_state3)) begin
        k_address1 = 64'd1;
    end else if ((1'd1 == ap_CS_fsm_state2)) begin
        k_address1 = 64'd28;
    end else if ((ap_CS_fsm_state1 == 1'd1)) begin
        k_address1 = 64'd30;
    end else begin
        k_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state2) | (1'd1 == ap_CS_fsm_state3) | (1'd1 == ap_CS_fsm_state4) | (1'd1 == ap_CS_fsm_state14) | (1'd1 == ap_CS_fsm_state15) | (1'd1 == ap_CS_fsm_state20) | (1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state16) | (1'd1 == ap_CS_fsm_state17) | (1'd1 == ap_CS_fsm_state8) | (1'd1 == ap_CS_fsm_state11) | ((ap_CS_fsm_state1 == 1'd1) & ~(1'b0 == ap_start)) | (1'd1 == ap_CS_fsm_state7) | (1'd1 == ap_CS_fsm_state9) | (1'd1 == ap_CS_fsm_state10) | (1'd1 == ap_CS_fsm_state13) | (1'd1 == ap_CS_fsm_state19) | (1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state6) | (1'd1 == ap_CS_fsm_state12) | (1'd1 == ap_CS_fsm_state18) | (1'd1 == ap_CS_fsm_state24))) begin
        k_ce0 = 1'b1;
    end else begin
        k_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state2) | (1'd1 == ap_CS_fsm_state3) | (1'd1 == ap_CS_fsm_state4) | (1'd1 == ap_CS_fsm_state14) | (1'd1 == ap_CS_fsm_state15) | (1'd1 == ap_CS_fsm_state20) | (1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state16) | (1'd1 == ap_CS_fsm_state17) | (1'd1 == ap_CS_fsm_state8) | (1'd1 == ap_CS_fsm_state11) | ((ap_CS_fsm_state1 == 1'd1) & ~(1'b0 == ap_start)) | (1'd1 == ap_CS_fsm_state7) | (1'd1 == ap_CS_fsm_state9) | (1'd1 == ap_CS_fsm_state10) | (1'd1 == ap_CS_fsm_state13) | (1'd1 == ap_CS_fsm_state19) | (1'd1 == ap_CS_fsm_state21) | (1'd1 == ap_CS_fsm_state22) | (1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state6) | (1'd1 == ap_CS_fsm_state12) | (1'd1 == ap_CS_fsm_state18) | (1'd1 == ap_CS_fsm_state24))) begin
        k_ce1 = 1'b1;
    end else begin
        k_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state24)) begin
        k_d0 = tmp_62_reg_1117;
    end else if ((1'd1 == ap_CS_fsm_state23)) begin
        k_d0 = tmp_52_reg_1097;
    end else if ((1'd1 == ap_CS_fsm_state12)) begin
        k_d0 = tmp_34_reg_944;
    end else if ((1'd1 == ap_CS_fsm_state11)) begin
        k_d0 = reg_528;
    end else if (((1'd1 == ap_CS_fsm_state17) | (1'd1 == ap_CS_fsm_state6) | (1'd1 == ap_CS_fsm_state18))) begin
        k_d0 = reg_523;
    end else if ((1'd1 == ap_CS_fsm_state5)) begin
        k_d0 = tmp_s_fu_560_p2;
    end else begin
        k_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state24)) begin
        k_d1 = tmp_67_reg_1122;
    end else if ((1'd1 == ap_CS_fsm_state23)) begin
        k_d1 = tmp_57_reg_1102;
    end else if ((1'd1 == ap_CS_fsm_state12)) begin
        k_d1 = reg_528;
    end else if ((1'd1 == ap_CS_fsm_state11)) begin
        k_d1 = tmp_29_reg_928;
    end else if (((1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state17) | (1'd1 == ap_CS_fsm_state6) | (1'd1 == ap_CS_fsm_state18))) begin
        k_d1 = reg_518;
    end else begin
        k_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state17) | (1'd1 == ap_CS_fsm_state11) | (1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state6) | (1'd1 == ap_CS_fsm_state12) | (1'd1 == ap_CS_fsm_state18) | (1'd1 == ap_CS_fsm_state24))) begin
        k_we0 = 1'b1;
    end else begin
        k_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state5) | (1'd1 == ap_CS_fsm_state17) | (1'd1 == ap_CS_fsm_state11) | (1'd1 == ap_CS_fsm_state23) | (1'd1 == ap_CS_fsm_state6) | (1'd1 == ap_CS_fsm_state12) | (1'd1 == ap_CS_fsm_state18) | (1'd1 == ap_CS_fsm_state24))) begin
        k_we1 = 1'b1;
    end else begin
        k_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state16)) begin
        sbox_address0 = tmp_44_fu_698_p1;
    end else if ((1'd1 == ap_CS_fsm_state15)) begin
        sbox_address0 = tmp_40_fu_688_p1;
    end else if ((1'd1 == ap_CS_fsm_state4)) begin
        sbox_address0 = tmp_14_fu_544_p1;
    end else if ((1'd1 == ap_CS_fsm_state3)) begin
        sbox_address0 = tmp_fu_534_p1;
    end else begin
        sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'd1 == ap_CS_fsm_state16)) begin
        sbox_address1 = tmp_46_fu_703_p1;
    end else if ((1'd1 == ap_CS_fsm_state15)) begin
        sbox_address1 = tmp_42_fu_693_p1;
    end else if ((1'd1 == ap_CS_fsm_state4)) begin
        sbox_address1 = tmp_16_fu_549_p1;
    end else if ((1'd1 == ap_CS_fsm_state3)) begin
        sbox_address1 = tmp_12_fu_539_p1;
    end else begin
        sbox_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state3) | (1'd1 == ap_CS_fsm_state4) | (1'd1 == ap_CS_fsm_state15) | (1'd1 == ap_CS_fsm_state16))) begin
        sbox_ce0 = 1'b1;
    end else begin
        sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == ap_CS_fsm_state3) | (1'd1 == ap_CS_fsm_state4) | (1'd1 == ap_CS_fsm_state15) | (1'd1 == ap_CS_fsm_state16))) begin
        sbox_ce1 = 1'b1;
    end else begin
        sbox_ce1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        25'd1 : begin
            if (~(1'b0 == ap_start)) begin
                ap_NS_fsm = 25'd2;
            end else begin
                ap_NS_fsm = 25'd1;
            end
        end
        25'd2 : begin
            ap_NS_fsm = 25'd4;
        end
        25'd4 : begin
            ap_NS_fsm = 25'd8;
        end
        25'd8 : begin
            ap_NS_fsm = 25'd16;
        end
        25'd16 : begin
            ap_NS_fsm = 25'd32;
        end
        25'd32 : begin
            ap_NS_fsm = 25'd64;
        end
        25'd64 : begin
            if ((tmp_48_fu_594_p3 == 1'd0)) begin
                ap_NS_fsm = 25'd128;
            end else begin
                ap_NS_fsm = 25'd4096;
            end
        end
        25'd128 : begin
            ap_NS_fsm = 25'd256;
        end
        25'd256 : begin
            ap_NS_fsm = 25'd512;
        end
        25'd512 : begin
            ap_NS_fsm = 25'd1024;
        end
        25'd1024 : begin
            ap_NS_fsm = 25'd2048;
        end
        25'd2048 : begin
            ap_NS_fsm = 25'd64;
        end
        25'd4096 : begin
            ap_NS_fsm = 25'd8192;
        end
        25'd8192 : begin
            ap_NS_fsm = 25'd16384;
        end
        25'd16384 : begin
            ap_NS_fsm = 25'd32768;
        end
        25'd32768 : begin
            ap_NS_fsm = 25'd65536;
        end
        25'd65536 : begin
            ap_NS_fsm = 25'd131072;
        end
        25'd131072 : begin
            ap_NS_fsm = 25'd262144;
        end
        25'd262144 : begin
            if ((1'd0 == tmp_69_fu_708_p3)) begin
                ap_NS_fsm = 25'd524288;
            end else begin
                ap_NS_fsm = 25'd16777216;
            end
        end
        25'd524288 : begin
            ap_NS_fsm = 25'd1048576;
        end
        25'd1048576 : begin
            ap_NS_fsm = 25'd2097152;
        end
        25'd2097152 : begin
            ap_NS_fsm = 25'd4194304;
        end
        25'd4194304 : begin
            ap_NS_fsm = 25'd8388608;
        end
        25'd8388608 : begin
            ap_NS_fsm = 25'd262144;
        end
        25'd16777216 : begin
            ap_NS_fsm = 25'd1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = tmp_19_reg_885;

assign grp_fu_492_p2 = (k_q1 ^ sbox_q1);

assign grp_fu_498_p2 = (k_q0 ^ sbox_q0);

assign grp_fu_504_p2 = (k_q1 ^ k_q0);

assign i_2_fu_622_p2 = (5'd4 + i_reg_470);

assign i_3_fu_736_p2 = (6'd4 + i_1_reg_481);

assign k_addr_17_reg_984 = 64'd16;

assign k_addr_19_reg_994 = 64'd17;

assign k_addr_21_reg_1004 = 64'd18;

assign k_addr_23_reg_1014 = 64'd19;

assign k_addr_3_reg_855 = 64'd1;

assign k_addr_5_reg_870 = 64'd2;

assign k_addr_7_reg_880 = 64'd3;

assign k_addr_reg_840 = 64'd0;

assign tmp1_fu_554_p2 = (reg_510 ^ rc_read);

assign tmp_12_fu_539_p1 = reg_514;

assign tmp_14_fu_544_p1 = reg_510;

assign tmp_16_fu_549_p1 = reg_514;

assign tmp_18_fu_566_p2 = rc_read << 8'd1;

assign tmp_19_fu_588_p2 = (tmp_22_cast_cast_fu_580_p3 ^ tmp_18_fu_566_p2);

assign tmp_20_fu_572_p3 = rc_read[32'd7];

assign tmp_21_fu_606_p2 = ($signed(4'd12) + $signed(tmp_68_fu_602_p1));

assign tmp_22_cast_cast_fu_580_p3 = ((tmp_20_fu_572_p3[0:0] === 1'b1) ? 8'd27 : 8'd0);

assign tmp_22_fu_612_p1 = tmp_21_fu_606_p2;

assign tmp_23_fu_617_p1 = i_reg_470;

assign tmp_25_fu_628_p2 = ($signed(4'd13) + $signed(tmp_68_reg_892));

assign tmp_26_fu_633_p1 = tmp_25_fu_628_p2;

assign tmp_27_fu_638_p2 = (tmp_68_reg_892 | 4'd1);

assign tmp_28_fu_643_p1 = tmp_27_fu_638_p2;

assign tmp_30_fu_648_p2 = ($signed(4'd14) + $signed(tmp_68_reg_892));

assign tmp_31_fu_653_p1 = tmp_30_fu_648_p2;

assign tmp_32_fu_658_p2 = (tmp_68_reg_892 | 4'd2);

assign tmp_33_fu_663_p1 = tmp_32_fu_658_p2;

assign tmp_35_fu_668_p2 = ($signed(4'd15) + $signed(tmp_68_reg_892));

assign tmp_36_fu_673_p1 = tmp_35_fu_668_p2;

assign tmp_37_fu_678_p2 = (tmp_68_reg_892 | 4'd3);

assign tmp_38_fu_683_p1 = tmp_37_fu_678_p2;

assign tmp_40_fu_688_p1 = reg_510;

assign tmp_42_fu_693_p1 = reg_514;

assign tmp_44_fu_698_p1 = reg_510;

assign tmp_46_fu_703_p1 = reg_514;

assign tmp_48_fu_594_p3 = i_reg_470[32'd4];

assign tmp_49_fu_742_p2 = ($signed(5'd28) + $signed(tmp_70_reg_1022));

assign tmp_50_fu_772_p1 = tmp_49_reg_1047;

assign tmp_51_fu_720_p1 = i_1_reg_481;

assign tmp_52_fu_790_p2 = (reg_510 ^ k_q0);

assign tmp_53_fu_747_p2 = ($signed(5'd29) + $signed(tmp_70_reg_1022));

assign tmp_54_fu_776_p1 = tmp_53_reg_1052;

assign tmp_55_fu_725_p2 = (tmp_70_fu_716_p1 | 5'd1);

assign tmp_56_fu_731_p1 = tmp_55_fu_725_p2;

assign tmp_57_fu_796_p2 = (reg_514 ^ k_q1);

assign tmp_58_fu_780_p2 = ($signed(5'd30) + $signed(tmp_70_reg_1022));

assign tmp_59_fu_802_p1 = tmp_58_reg_1077;

assign tmp_60_fu_752_p2 = (tmp_70_reg_1022 | 5'd2);

assign tmp_61_fu_757_p1 = tmp_60_fu_752_p2;

assign tmp_62_fu_810_p2 = (k_load_29_reg_1082 ^ k_q0);

assign tmp_63_fu_785_p2 = ($signed(5'd31) + $signed(tmp_70_reg_1022));

assign tmp_64_fu_806_p1 = tmp_63_reg_1087;

assign tmp_65_fu_762_p2 = (tmp_70_reg_1022 | 5'd3);

assign tmp_66_fu_767_p1 = tmp_65_fu_762_p2;

assign tmp_67_fu_815_p2 = (k_load_31_reg_1092 ^ k_q1);

assign tmp_68_fu_602_p1 = i_reg_470[3:0];

assign tmp_69_fu_708_p3 = i_1_reg_481[32'd5];

assign tmp_70_fu_716_p1 = i_1_reg_481[4:0];

assign tmp_fu_534_p1 = reg_510;

assign tmp_s_fu_560_p2 = (tmp1_fu_554_p2 ^ sbox_load_reg_860);

always @ (posedge ap_clk) begin
    k_addr_11_reg_923[0] <= 1'b1;
    k_addr_11_reg_923[4] <= 1'b0;
    k_addr_13_reg_938[1] <= 1'b1;
    k_addr_13_reg_938[4] <= 1'b0;
    k_addr_15_reg_954[1:0] <= 2'b11;
    k_addr_15_reg_954[4] <= 1'b0;
    k_addr_27_reg_1037[0] <= 1'b1;
    k_addr_29_reg_1057[1] <= 1'b1;
    k_addr_31_reg_1062[1:0] <= 2'b11;
end

endmodule //aes_expandEncKey
